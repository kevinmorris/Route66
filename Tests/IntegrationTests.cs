using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;
using Services;
// ReSharper disable InconsistentNaming

namespace Tests
{
    public class IntegrationTests
    {
        private TN3270Service<XElement> _service = new(new Xml3270Translator());

        [SetUp]
        public void SetUp()
        {
            _service = new TN3270Service<XElement>(new Xml3270Translator());
        }

        private void RunBytes(byte[] data, IList<string> rowXml)
        {
            _service.ActiveCommand = 0x00;

            for (var i = 0; i < _service.Handlers.Length; i++)
            {
                var handler = _service.Handlers[i];
                var i1 = i;
                handler.RowUpdated += (sender, args) =>
                {
                    rowXml[i1] = args.Data.ToString();
                };
            }

            _service.ProcessOutbound(data, 0, 0);
            foreach (var rowHandler in _service.Handlers)
            {
                rowHandler.Update();
            }
        }

        [Test]
        public void SplashScreen()
        {
            var data = new byte[] { 0xf5, 0x42, 0x11, 0x40,
                0x40, 0x1d, 0x60, 0xc8, 0x85, 0x99, 0x83, 0xa4, 0x93, 0x85, 0xa2, 0x40, 0xe5, 0x85, 0x99, 0xa2,
                0x89, 0x96, 0x95, 0x40, 0x40, 0x7a, 0x11, 0x40, 0xd4, 0x1d, 0xe8, 0xf4, 0x4b, 0xf6, 0x4b, 0xf0,
                0x4b, 0xf1, 0xf0, 0xf9, 0xf4, 0xf1, 0x60, 0xe2, 0xc4, 0xd3, 0x60, 0x87, 0xf6, 0xf5, 0x83, 0xf9,
                0xf7, 0x86, 0x84, 0xf6, 0x11, 0xc1, 0x50, 0x1d, 0x60, 0xc8, 0x96, 0xa2, 0xa3, 0x40, 0x95, 0x81,
                0x94, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc1, 0xe4, 0x1d,
                0xe8, 0xc7, 0xc1, 0xe4, 0xc7, 0xc1, 0xd4, 0xc5, 0xd3, 0xc1, 0x11, 0xc2, 0x60, 0x1d, 0x60, 0xc8,
                0x96, 0xa2, 0xa3, 0x40, 0xd6, 0xe2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x7a, 0x11, 0xc2, 0xf4, 0x1d, 0xe8, 0xe6, 0x89, 0x95, 0x84, 0x96, 0xa6, 0xa2, 0x60, 0xf6,
                0x4b, 0xf2, 0x4b, 0xf9, 0xf2, 0xf0, 0xf0, 0x40, 0x40, 0xd7, 0x99, 0x96, 0x86, 0x85, 0xa2, 0xa2,
                0x89, 0x96, 0x95, 0x81, 0x93, 0x40, 0xf6, 0xf4, 0x60, 0x82, 0x89, 0xa3, 0x11, 0xc3, 0xf0, 0x1d,
                0x60, 0xc8, 0x96, 0xa2, 0xa3, 0x40, 0xc1, 0x99, 0x83, 0x88, 0x89, 0xa3, 0x85, 0x83, 0xa3, 0xa4,
                0x99, 0x85, 0x40, 0x7a, 0x11, 0xc4, 0xc4, 0x1d, 0xe8, 0xc9, 0x95, 0xa3, 0x85, 0x93, 0x4d, 0xd9,
                0x5d, 0x40, 0xa7, 0xf6, 0xf4, 0x11, 0xc5, 0x40, 0x1d, 0x60, 0xd7, 0x99, 0x96, 0x83, 0x85, 0xa2,
                0xa2, 0x96, 0x99, 0xa2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc5, 0xd4,
                0x1d, 0xe8, 0xd3, 0xd7, 0x7e, 0xf1, 0xf2, 0x6b, 0x40, 0xc3, 0x96, 0x99, 0x85, 0xa2, 0x7e, 0xf6,
                0x6b, 0x40, 0xc3, 0xd7, 0xe4, 0xa2, 0x7e, 0xf1, 0x11, 0xc6, 0x50, 0x1d, 0x60, 0xd3, 0xd7, 0xc1,
                0xd9, 0x40, 0xd5, 0x81, 0x94, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a,
                0x11, 0xc6, 0xe4, 0x1d, 0xe8, 0xc8, 0xc5, 0xd9, 0xc3, 0xe4, 0xd3, 0xc5, 0xe2, 0x11, 0xc7, 0x60,
                0x1d, 0x60, 0xc4, 0x85, 0xa5, 0x89, 0x83, 0x85, 0x40, 0x95, 0xa4, 0x94, 0x82, 0x85, 0x99, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc7, 0xf4, 0x1d, 0xe8, 0xf0, 0x7a, 0xf0, 0xf0, 0xc3, 0xf0,
                0x11, 0xc8, 0xf0, 0x1d, 0x60, 0xe2, 0xa4, 0x82, 0x83, 0x88, 0x81, 0x95, 0x95, 0x85, 0x93, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc9, 0xc4, 0x1d, 0xe8, 0xf0, 0xf0, 0xf1,
                0xc1, 0x11, 0xc8, 0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0x40, 0x40, 0x40,
                0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40,
                0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x11, 0x4a, 0x40, 0x1d,
                0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40,
                0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40,
                0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0x4b, 0x50,
                0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40,
                0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40,
                0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0x4c,
                0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2,
                0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11,
                0x4d, 0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf4, 0x93, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x6d, 0x6b, 0x6b, 0x6b, 0x60, 0x60, 0x60, 0x6b, 0x6b, 0x6d, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2,
                0xd2, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0x4f, 0x40, 0x1d, 0x60, 0x40, 0xe9, 0xe9, 0xe9, 0xa9, 0xa9,
                0x40, 0x61, 0x6b, 0x7d, 0x4b, 0x60, 0x7d, 0x79, 0x7d, 0x40, 0x40, 0x40, 0x40, 0x60, 0x4b, 0x40,
                0x40, 0x5e, 0x60, 0x5e, 0x5e, 0x6b, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x40,
                0x40, 0x40, 0x40, 0x11, 0x50, 0x50, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf4, 0x6b,
                0xf4, 0x60, 0x40, 0x40, 0x5d, 0x40, 0x5d, 0x60, 0x6b, 0x6d, 0x4b, 0x40, 0x6b, 0x4d, 0x40, 0x4d,
                0x40, 0x40, 0x7d, 0x7d, 0x60, 0x7d, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x11, 0xd1, 0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7d, 0x60,
                0x60, 0x60, 0x7d, 0x7d, 0x4d, 0x6d, 0x61, 0x60, 0x60, 0x7d, 0x40, 0x40, 0x79, 0x60, 0x7d, 0x5d,
                0x6d, 0x5d, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11,
                0xd2, 0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2,
                0xd2, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0xd4, 0x40, 0x1d, 0x60, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0x88, 0x85, 0x40, 0xd4, 0xe5, 0xe2, 0x40, 0xf3, 0x4b,
                0xf8, 0x91, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3,
                0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40,
                0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0xd5, 0x50, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3,
                0xa4, 0x99, 0x4d, 0x95, 0x5d, 0x92, 0x85, 0xa8, 0x40, 0xe2, 0xa8, 0xa2, 0xa3, 0x85, 0x94, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5,
                0x11, 0xd6, 0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2,
                0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0xf5,
                0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x11, 0xd7, 0xf0, 0x1d, 0x60, 0x11,
                0xd9, 0x40, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xd2, 0xf3, 0x40, 0x83, 0x99, 0x85, 0x81,
                0xa3, 0x85, 0x84, 0x40, 0x82, 0xa8, 0x40, 0x40, 0x40, 0xe5, 0x96, 0x93, 0x92, 0x85, 0x99, 0x40,
                0xc2, 0x81, 0x95, 0x84, 0x92, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xa5, 0x96, 0x93,
                0x92, 0x85, 0x99, 0x7c, 0x82, 0x81, 0x95, 0x84, 0x92, 0x85, 0x4b, 0x96, 0x99, 0x87, 0x11, 0x5a,
                0x50, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xd2, 0xf4, 0x60, 0x40, 0xa4, 0x97, 0x84, 0x81,
                0xa3, 0x85, 0x40, 0x82, 0xa8, 0x40, 0x40, 0x40, 0xd1, 0xa4, 0x85, 0x99, 0x87, 0x85, 0x95, 0x40,
                0xe6, 0x89, 0x95, 0x92, 0x85, 0x93, 0x94, 0x81, 0x95, 0x95, 0x40, 0x40, 0x91, 0xa4, 0x85, 0x99,
                0x87, 0x85, 0x95, 0x4b, 0xa6, 0x89, 0x95, 0x92, 0x85, 0x93, 0x94, 0x81, 0x95, 0x95, 0x7c, 0x97,
                0x85, 0x82, 0x82, 0x93, 0x85, 0x60, 0x82, 0x85, 0x81, 0x83, 0x88, 0x4b, 0x83, 0x88, 0x11, 0x5b,
                0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xd2, 0xf5, 0x40, 0x40, 0xa4, 0x97, 0x84, 0x81,
                0xa3, 0x85, 0x40, 0x82, 0xa8, 0x40, 0x40, 0x40, 0xd9, 0x96, 0x82, 0x40, 0xd7, 0x99, 0x89, 0x95,
                0xa2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x97, 0x99, 0x89, 0x95,
                0xf0, 0xf0, 0xf9, 0xf6, 0x7c, 0x87, 0x94, 0x81, 0x89, 0x93, 0x4b, 0x83, 0x96, 0x94, 0x11, 0x5c,
                0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xa2, 0x85, 0x85, 0x40,
                0xe2, 0xe8, 0xe2, 0xf2, 0x4b, 0xd1, 0xc3, 0xd3, 0xd3, 0xc9, 0xc2, 0x4d, 0xc3, 0xd9, 0xc5, 0xc4,
                0xc9, 0xe3, 0xe2, 0x5d, 0x40, 0x86, 0x96, 0x99, 0x40, 0x83, 0x96, 0x94, 0x97, 0x93, 0x85, 0xa3,
                0x85, 0x40, 0x83, 0x99, 0x85, 0x84, 0x89, 0xa3, 0xa2, 0xff, 0xef };
            var rowXml = new string[24];

            RunBytes(data, rowXml);


            Assert.AreEqual("<row>\r\n  <label row=\"0\" col=\"1\" length=\"19\">Hercules Version  :</label>\r\n  <label row=\"0\" col=\"21\" length=\"25\">4.6.0.10941-SDL-g65c97fd6</label>\r\n</row>", rowXml[0]);
            Assert.AreEqual("<row>\r\n  <label row=\"1\" col=\"1\" length=\"19\">Host name         :</label>\r\n  <label row=\"1\" col=\"21\" length=\"9\">GAUGAMELA</label>\r\n</row>", rowXml[1]);
            Assert.AreEqual("<row>\r\n  <label row=\"2\" col=\"1\" length=\"19\">Host OS           :</label>\r\n  <label row=\"2\" col=\"21\" length=\"37\">Windows-6.2.9200  Professional 64-bit</label>\r\n</row>", rowXml[2]);
            Assert.AreEqual("<row>\r\n  <label row=\"3\" col=\"1\" length=\"19\">Host Architecture :</label>\r\n  <label row=\"3\" col=\"21\" length=\"12\">Intel(R) x64</label>\r\n</row>", rowXml[3]);
            Assert.AreEqual("<row>\r\n  <label row=\"4\" col=\"1\" length=\"19\">Processors        :</label>\r\n  <label row=\"4\" col=\"21\" length=\"22\">LP=12, Cores=6, CPUs=1</label>\r\n</row>", rowXml[4]);
            Assert.AreEqual("<row>\r\n  <label row=\"5\" col=\"1\" length=\"19\">LPAR Name         :</label>\r\n  <label row=\"5\" col=\"21\" length=\"8\">HERCULES</label>\r\n</row>", rowXml[5]);
            Assert.AreEqual("<row>\r\n  <label row=\"6\" col=\"1\" length=\"19\">Device number     :</label>\r\n  <label row=\"6\" col=\"21\" length=\"6\">0:00C0</label>\r\n</row>", rowXml[6]);
            Assert.AreEqual("<row>\r\n  <label row=\"7\" col=\"1\" length=\"20\">                    </label>\r\n  <label row=\"7\" col=\"21\" length=\"50\">       TTTTTTTTTTTT   KKKK  KKKKK     555555555555</label>\r\n</row>", rowXml[7]);
            Assert.AreEqual("<row>\r\n  <label row=\"8\" col=\"1\" length=\"60\">                           TT   TT   TT    KK    KK       55</label>\r\n</row>", rowXml[8]);
            Assert.AreEqual("<row>\r\n  <label row=\"9\" col=\"1\" length=\"60\">                           TT   TT   TT    KK   KK        55</label>\r\n</row>", rowXml[9]);
            Assert.AreEqual("<row>\r\n  <label row=\"10\" col=\"1\" length=\"60\">                                TT         KK  KK         55</label>\r\n</row>", rowXml[10]);
            Assert.AreEqual("<row>\r\n  <label row=\"11\" col=\"1\" length=\"65\">        4l      _,,,---,,_      TT         KK KK          55     </label>\r\n</row>", rowXml[11]);
            Assert.AreEqual("<row>\r\n  <label row=\"12\" col=\"1\" length=\"73\"> ZZZzz /,'.-'`'    -.  ;-;;,    TT         KKKK           55555555555    </label>\r\n</row>", rowXml[12]);
            Assert.AreEqual("<row>\r\n  <label row=\"13\" col=\"1\" length=\"76\">      4,4-  ) )-,_. ,( (  ''-'  TT         KKKKK                    55      </label>\r\n</row>", rowXml[13]);
            Assert.AreEqual("<row>\r\n  <label row=\"14\" col=\"1\" length=\"70\">     '---''(_/--'  `-')_)       TT         KK  KK                   55</label>\r\n</row>", rowXml[14]);
            Assert.AreEqual("<row>\r\n  <label row=\"15\" col=\"1\" length=\"70\">                                TT         KK   KK                  55</label>\r\n</row>", rowXml[15]);
            Assert.AreEqual("<row>\r\n  <label row=\"16\" col=\"1\" length=\"70\">       The MVS 3.8j             TT         KK    KK                 55</label>\r\n</row>", rowXml[16]);
            Assert.AreEqual("<row>\r\n  <label row=\"17\" col=\"1\" length=\"70\">     Tur(n)key System           TT         KK     KK                55</label>\r\n</row>", rowXml[17]);
            Assert.AreEqual("<row>\r\n  <label row=\"18\" col=\"1\" length=\"69\">                              TTTTTT      KKKK     KKK    55555555555</label>\r\n</row>", rowXml[18]);
            Assert.AreEqual("<row>\r\n  <label row=\"19\" col=\"1\" length=\"1\"> </label>\r\n</row>", rowXml[19]);
            Assert.AreEqual("<row>\r\n  <label row=\"20\" col=\"1\" length=\"58\">    TK3 created by   Volker Bandke       volker@bandke.org</label>\r\n</row>", rowXml[20]);
            Assert.AreEqual("<row>\r\n  <label row=\"21\" col=\"1\" length=\"75\">    TK4- update by   Juergen Winkelmann  juergen.winkelmann@pebble-beach.ch</label>\r\n</row>", rowXml[21]);
            Assert.AreEqual("<row>\r\n  <label row=\"22\" col=\"1\" length=\"59\">    TK5  update by   Rob Prins           prin0096@gmail.com</label>\r\n</row>", rowXml[22]);
            Assert.AreEqual("<row>\r\n  <label row=\"23\" col=\"1\" length=\"54\">         see SYS2.JCLLIB(CREDITS) for complete credits</label>\r\n</row>", rowXml[23]);
        }

        [Test]
        public void Login()
        {
            var data = new byte[]
            {
                0xf5, 0x42, 0x11, 0x40,
                0x40, 0x1d, 0x60, 0xc8, 0x85, 0x99, 0x83, 0xa4, 0x93, 0x85, 0xa2, 0x40, 0xe5, 0x85, 0x99, 0xa2,
                0x89, 0x96, 0x95, 0x40, 0x40, 0x7a, 0x11, 0x40, 0xd4, 0x1d, 0xe8, 0xf4, 0x4b, 0xf6, 0x4b, 0xf0,
                0x4b, 0xf1, 0xf0, 0xf9, 0xf4, 0xf1, 0x60, 0xe2, 0xc4, 0xd3, 0x60, 0x87, 0xf6, 0xf5, 0x83, 0xf9,
                0xf7, 0x86, 0x84, 0xf6, 0x11, 0xc1, 0x50, 0x1d, 0x60, 0xc8, 0x96, 0xa2, 0xa3, 0x40, 0x95, 0x81,
                0x94, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc1, 0xe4, 0x1d,
                0xe8, 0xc7, 0xc1, 0xe4, 0xc7, 0xc1, 0xd4, 0xc5, 0xd3, 0xc1, 0x11, 0xc2, 0x60, 0x1d, 0x60, 0xc8,
                0x96, 0xa2, 0xa3, 0x40, 0xd6, 0xe2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x7a, 0x11, 0xc2, 0xf4, 0x1d, 0xe8, 0xe6, 0x89, 0x95, 0x84, 0x96, 0xa6, 0xa2, 0x60, 0xf6,
                0x4b, 0xf2, 0x4b, 0xf9, 0xf2, 0xf0, 0xf0, 0x40, 0x40, 0xd7, 0x99, 0x96, 0x86, 0x85, 0xa2, 0xa2,
                0x89, 0x96, 0x95, 0x81, 0x93, 0x40, 0xf6, 0xf4, 0x60, 0x82, 0x89, 0xa3, 0x11, 0xc3, 0xf0, 0x1d,
                0x60, 0xc8, 0x96, 0xa2, 0xa3, 0x40, 0xc1, 0x99, 0x83, 0x88, 0x89, 0xa3, 0x85, 0x83, 0xa3, 0xa4,
                0x99, 0x85, 0x40, 0x7a, 0x11, 0xc4, 0xc4, 0x1d, 0xe8, 0xc9, 0x95, 0xa3, 0x85, 0x93, 0x4d, 0xd9,
                0x5d, 0x40, 0xa7, 0xf6, 0xf4, 0x11, 0xc5, 0x40, 0x1d, 0x60, 0xd7, 0x99, 0x96, 0x83, 0x85, 0xa2,
                0xa2, 0x96, 0x99, 0xa2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc5, 0xd4,
                0x1d, 0xe8, 0xd3, 0xd7, 0x7e, 0xf1, 0xf2, 0x6b, 0x40, 0xc3, 0x96, 0x99, 0x85, 0xa2, 0x7e, 0xf6,
                0x6b, 0x40, 0xc3, 0xd7, 0xe4, 0xa2, 0x7e, 0xf1, 0x11, 0xc6, 0x50, 0x1d, 0x60, 0xd3, 0xd7, 0xc1,
                0xd9, 0x40, 0xd5, 0x81, 0x94, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a,
                0x11, 0xc6, 0xe4, 0x1d, 0xe8, 0xc8, 0xc5, 0xd9, 0xc3, 0xe4, 0xd3, 0xc5, 0xe2, 0x11, 0xc7, 0x60,
                0x1d, 0x60, 0xc4, 0x85, 0xa5, 0x89, 0x83, 0x85, 0x40, 0x95, 0xa4, 0x94, 0x82, 0x85, 0x99, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc7, 0xf4, 0x1d, 0xe8, 0xf0, 0x7a, 0xf0, 0xf0, 0xc3, 0xf0,
                0x11, 0xc8, 0xf0, 0x1d, 0x60, 0xe2, 0xa4, 0x82, 0x83, 0x88, 0x81, 0x95, 0x95, 0x85, 0x93, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc9, 0xc4, 0x1d, 0xe8, 0xf0, 0xf0, 0xf1,
                0xc1, 0x11, 0xc8, 0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0x40, 0x40, 0x40,
                0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40,
                0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x11, 0x4a, 0x40, 0x1d,
                0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40,
                0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40,
                0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0x4b, 0x50,
                0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40,
                0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40,
                0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0x4c,
                0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2,
                0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11,
                0x4d, 0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf4, 0x93, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x6d, 0x6b, 0x6b, 0x6b, 0x60, 0x60, 0x60, 0x6b, 0x6b, 0x6d, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2,
                0xd2, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0x4f, 0x40, 0x1d, 0x60, 0x40, 0xe9, 0xe9, 0xe9, 0xa9, 0xa9,
                0x40, 0x61, 0x6b, 0x7d, 0x4b, 0x60, 0x7d, 0x79, 0x7d, 0x40, 0x40, 0x40, 0x40, 0x60, 0x4b, 0x40,
                0x40, 0x5e, 0x60, 0x5e, 0x5e, 0x6b, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x40,
                0x40, 0x40, 0x40, 0x11, 0x50, 0x50, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf4, 0x6b,
                0xf4, 0x60, 0x40, 0x40, 0x5d, 0x40, 0x5d, 0x60, 0x6b, 0x6d, 0x4b, 0x40, 0x6b, 0x4d, 0x40, 0x4d,
                0x40, 0x40, 0x7d, 0x7d, 0x60, 0x7d, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x11, 0xd1, 0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7d, 0x60,
                0x60, 0x60, 0x7d, 0x7d, 0x4d, 0x6d, 0x61, 0x60, 0x60, 0x7d, 0x40, 0x40, 0x79, 0x60, 0x7d, 0x5d,
                0x6d, 0x5d, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11,
                0xd2, 0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2,
                0xd2, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0xd4, 0x40, 0x1d, 0x60, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0x88, 0x85, 0x40, 0xd4, 0xe5, 0xe2, 0x40, 0xf3, 0x4b,
                0xf8, 0x91, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3,
                0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40,
                0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0xd5, 0x50, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3,
                0xa4, 0x99, 0x4d, 0x95, 0x5d, 0x92, 0x85, 0xa8, 0x40, 0xe2, 0xa8, 0xa2, 0xa3, 0x85, 0x94, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5,
                0x11, 0xd6, 0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2,
                0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0xf5,
                0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x11, 0xd7, 0xf0, 0x1d, 0x60, 0x11,
                0xd9, 0x40, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xd2, 0xf3, 0x40, 0x83, 0x99, 0x85, 0x81,
                0xa3, 0x85, 0x84, 0x40, 0x82, 0xa8, 0x40, 0x40, 0x40, 0xe5, 0x96, 0x93, 0x92, 0x85, 0x99, 0x40,
                0xc2, 0x81, 0x95, 0x84, 0x92, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xa5, 0x96, 0x93,
                0x92, 0x85, 0x99, 0x7c, 0x82, 0x81, 0x95, 0x84, 0x92, 0x85, 0x4b, 0x96, 0x99, 0x87, 0x11, 0x5a,
                0x50, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xd2, 0xf4, 0x60, 0x40, 0xa4, 0x97, 0x84, 0x81,
                0xa3, 0x85, 0x40, 0x82, 0xa8, 0x40, 0x40, 0x40, 0xd1, 0xa4, 0x85, 0x99, 0x87, 0x85, 0x95, 0x40,
                0xe6, 0x89, 0x95, 0x92, 0x85, 0x93, 0x94, 0x81, 0x95, 0x95, 0x40, 0x40, 0x91, 0xa4, 0x85, 0x99,
                0x87, 0x85, 0x95, 0x4b, 0xa6, 0x89, 0x95, 0x92, 0x85, 0x93, 0x94, 0x81, 0x95, 0x95, 0x7c, 0x97,
                0x85, 0x82, 0x82, 0x93, 0x85, 0x60, 0x82, 0x85, 0x81, 0x83, 0x88, 0x4b, 0x83, 0x88, 0x11, 0x5b,
                0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xd2, 0xf5, 0x40, 0x40, 0xa4, 0x97, 0x84, 0x81,
                0xa3, 0x85, 0x40, 0x82, 0xa8, 0x40, 0x40, 0x40, 0xd9, 0x96, 0x82, 0x40, 0xd7, 0x99, 0x89, 0x95,
                0xa2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x97, 0x99, 0x89, 0x95,
                0xf0, 0xf0, 0xf9, 0xf6, 0x7c, 0x87, 0x94, 0x81, 0x89, 0x93, 0x4b, 0x83, 0x96, 0x94, 0x11, 0x5c,
                0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xa2, 0x85, 0x85, 0x40,
                0xe2, 0xe8, 0xe2, 0xf2, 0x4b, 0xd1, 0xc3, 0xd3, 0xd3, 0xc9, 0xc2, 0x4d, 0xc3, 0xd9, 0xc5, 0xc4,
                0xc9, 0xe3, 0xe2, 0x5d, 0x40, 0x86, 0x96, 0x99, 0x40, 0x83, 0x96, 0x94, 0x97, 0x93, 0x85, 0xa3,
                0x85, 0x40, 0x83, 0x99, 0x85, 0x84, 0x89, 0xa3, 0xa2, 0xff, 0xef, 0xf5, 0xc3, 0x11, 0x40,
                0x40, 0xe3, 0x85, 0x99, 0x94, 0x89, 0x95, 0x81, 0x93, 0x11, 0x40, 0xc8, 0x1d, 0xf8, 0x11, 0x40,
                0x4a, 0x1d, 0xf8, 0xc3, 0xe4, 0xe4, 0xf0, 0xc3, 0xf0, 0x40, 0x40, 0x11, 0x40, 0xd3, 0x1d, 0xf8,
                0x11, 0xc1, 0xc1, 0x1d, 0xf8, 0xc4, 0x81, 0xa3, 0x85, 0x11, 0xc1, 0xc6, 0x1d, 0xf8, 0x11, 0xc1,
                0xc7, 0x1d, 0xf8, 0xf0, 0xf8, 0x4b, 0xf0, 0xf2, 0x4b, 0xf2, 0xf4, 0x11, 0xc1, 0x50, 0x1d, 0xf8,
                0x11, 0xc2, 0xd1, 0x1d, 0xf8, 0xe3, 0x89, 0x94, 0x85, 0x11, 0xc2, 0xd6, 0x1d, 0xf8, 0x11, 0xc2,
                0xd7, 0x1d, 0xf8, 0xf2, 0xf3, 0x7a, 0xf5, 0xf8, 0x7a, 0xf0, 0xf9, 0x11, 0xc2, 0x60, 0x1d, 0xf0,
                0x11, 0xc4, 0x4a, 0x1d, 0xf0, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3,
                0xe3, 0x11, 0xc4, 0xd7, 0x1d, 0xf0, 0x11, 0xc4, 0xd9, 0x1d, 0xf0, 0xd2, 0xd2, 0xd2, 0xd2, 0x11,
                0xc4, 0x5e, 0x1d, 0xf0, 0x11, 0xc4, 0x5f, 0x1d, 0xf0, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0x11, 0xc4,
                0xe5, 0x1d, 0xf0, 0x11, 0xc4, 0xe8, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5,
                0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0xc4, 0xf5, 0x1d, 0xf0, 0x11,
                0xc5, 0x5a, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0xc5, 0x5d, 0x1d, 0xf0, 0x11, 0xc5, 0x5f, 0x1d, 0xf0,
                0xe3, 0xe3, 0x11, 0xc5, 0xe2, 0x1d, 0xf0, 0x11, 0xc5, 0xe4, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0xc5,
                0xe7, 0x1d, 0xf0, 0x11, 0xc5, 0x6a, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0xc5, 0x6d, 0x1d, 0xf0, 0x11,
                0xc5, 0xf0, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0xc5, 0xf3, 0x1d, 0xf0, 0x11, 0xc5, 0xf8, 0x1d, 0xf0,
                0x28, 0x42, 0xf4, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0xc6, 0xc1, 0x1d, 0xf0, 0x11, 0xc6, 0x6a,
                0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0xc6, 0x6d, 0x1d, 0xf0, 0x11, 0xc6, 0x6f, 0x1d, 0xf0, 0xe3, 0xe3,
                0x11, 0xc6, 0xf2, 0x1d, 0xf0, 0x11, 0xc6, 0xf4, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0xc6, 0xf7, 0x1d,
                0xf0, 0x11, 0xc6, 0x7a, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0xc6, 0x7d, 0x1d, 0xf0, 0x11, 0xc6, 0x7f,
                0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0xc7, 0xc2, 0x1d, 0xf0, 0x11, 0xc7, 0xc8, 0x1d, 0xf0, 0x28, 0x42,
                0xf4, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0xc7, 0xd1, 0x1d, 0xf0, 0x11, 0xc7, 0x7f, 0x1d, 0xf0,
                0xe3, 0xe3, 0x11, 0xc8, 0xc2, 0x1d, 0xf0, 0x11, 0xc8, 0x4a, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0xc8,
                0x4d, 0x1d, 0xf0, 0x11, 0xc8, 0x4e, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0xc8, 0xd1, 0x1d, 0xf0, 0x11,
                0xc8, 0xd8, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0xc8, 0xf7, 0x1d,
                0xf8, 0x4f, 0x93, 0x11, 0xc8, 0x7a, 0x1d, 0xf8, 0x11, 0xc8, 0x7f, 0x1d, 0xf8, 0x6d, 0x6b, 0x6b,
                0x6b, 0x60, 0x60, 0x60, 0x6b, 0x6b, 0x6d, 0x11, 0xc9, 0x4a, 0x1d, 0xf8, 0x11, 0xc9, 0x4f, 0x1d,
                0xf0, 0xe3, 0xe3, 0x11, 0xc9, 0xd2, 0x1d, 0xf0, 0x11, 0xc9, 0x5a, 0x1d, 0xf0, 0xd2, 0xd2, 0x40,
                0xd2, 0xd2, 0x11, 0xc9, 0x60, 0x1d, 0xf0, 0x11, 0xc9, 0xe8, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5,
                0xf5, 0x28, 0x42, 0x00, 0x11, 0xc9, 0x6b, 0x1d, 0xf0, 0x11, 0x4a, 0x40, 0x1d, 0xf8, 0xe9, 0xe9,
                0xe9, 0xa9, 0xa9, 0x40, 0x61, 0x6b, 0x7d, 0x4b, 0x60, 0x7d, 0x79, 0x7d, 0x40, 0x40, 0x40, 0x40,
                0x60, 0x4b, 0x40, 0x40, 0x5e, 0x60, 0x5e, 0x5e, 0x6b, 0x11, 0x4a, 0x5c, 0x1d, 0xf8, 0x11, 0x4a,
                0x5f, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0x4a, 0xe2, 0x1d, 0xf0, 0x11, 0x4a, 0x6a, 0x1d, 0xf0, 0xd2,
                0xd2, 0xd2, 0xd2, 0x11, 0x4a, 0x6f, 0x1d, 0xf0, 0x11, 0x4a, 0xf8, 0x1d, 0xf0, 0x28, 0x42, 0xf4,
                0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0x4b,
                0xc4, 0x1d, 0xf0, 0x11, 0x4b, 0xd5, 0x1d, 0xf8, 0x4f, 0x6b, 0xf4, 0x60, 0x40, 0x40, 0x5d, 0x40,
                0x5d, 0x60, 0x6b, 0x6d, 0x4b, 0x40, 0x6b, 0x4d, 0x40, 0x4d, 0x40, 0x40, 0x7d, 0x7d, 0x60, 0x7d,
                0x11, 0x4b, 0x6e, 0x1d, 0xf8, 0x11, 0x4b, 0x6f, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0x4b, 0xf2, 0x1d,
                0xf0, 0x11, 0x4b, 0x7a, 0x1d, 0xf0, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0x11, 0x4c, 0x40, 0x1d, 0xf0,
                0x11, 0x4c, 0xd2, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0x4c, 0xd5,
                0x1d, 0xf0, 0x11, 0x4c, 0xe4, 0x1d, 0xf8, 0x7d, 0x60, 0x60, 0x60, 0x7d, 0x7d, 0x4d, 0x6d, 0x61,
                0x60, 0x60, 0x7d, 0x40, 0x40, 0x79, 0x60, 0x7d, 0x5d, 0x6d, 0x5d, 0x11, 0x4c, 0xf9, 0x1d, 0xf8,
                0x11, 0x4c, 0x7f, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0x4d, 0xc2, 0x1d, 0xf0, 0x11, 0x4d, 0x4a, 0x1d,
                0xf0, 0xd2, 0xd2, 0x11, 0x4d, 0x4d, 0x1d, 0xf0, 0x11, 0x4d, 0x4e, 0x1d, 0xf0, 0xd2, 0xd2, 0x11,
                0x4d, 0xd1, 0x1d, 0xf0, 0x11, 0x4d, 0xe2, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5, 0xf5, 0x28, 0x42,
                0x00, 0x11, 0x4d, 0xe5, 0x1d, 0xf0, 0x11, 0x4e, 0x4f, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0x4e, 0xd2,
                0x1d, 0xf0, 0x11, 0x4e, 0x5a, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0x4e, 0x5d, 0x1d, 0xf0, 0x11, 0x4e,
                0x5f, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0x4e, 0xe2, 0x1d, 0xf0, 0x11, 0x4e, 0xf2, 0x1d, 0xf0, 0x28,
                0x42, 0xf4, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0x4e, 0xf5, 0x1d, 0xf0, 0x11, 0x4f, 0xc6, 0x1d,
                0xf8, 0xe3, 0x88, 0x85, 0x40, 0xd4, 0xe5, 0xe2, 0x40, 0xf3, 0x4b, 0xf8, 0x91, 0x11, 0x4f, 0xd3,
                0x1d, 0xf8, 0x11, 0x4f, 0x5f, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0x4f, 0xe2, 0x1d, 0xf0, 0x11, 0x4f,
                0x6a, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0x4f, 0x6d, 0x1d, 0xf0, 0x11, 0x4f, 0xf0, 0x1d, 0xf0, 0xd2,
                0xd2, 0x11, 0x4f, 0xf3, 0x1d, 0xf0, 0x11, 0x50, 0xc2, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5, 0xf5,
                0x28, 0x42, 0x00, 0x11, 0x50, 0xc5, 0x1d, 0xf0, 0x11, 0x50, 0xd4, 0x1d, 0xf8, 0xe3, 0xa4, 0x99,
                0x4d, 0x95, 0x5d, 0x92, 0x85, 0xa8, 0x40, 0xe2, 0xa8, 0xa2, 0xa3, 0x85, 0x94, 0x11, 0x50, 0xe5,
                0x1d, 0xf8, 0x11, 0x50, 0x6f, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0x50, 0xf2, 0x1d, 0xf0, 0x11, 0x50,
                0x7a, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0x50, 0x7d, 0x1d, 0xf0, 0x11, 0xd1, 0xc1, 0x1d, 0xf0, 0xd2,
                0xd2, 0x11, 0xd1, 0xc4, 0x1d, 0xf0, 0x11, 0xd1, 0xd2, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5, 0xf5,
                0x28, 0x42, 0x00, 0x11, 0xd1, 0xd5, 0x1d, 0xf0, 0x11, 0xd1, 0x7d, 0x1d, 0xf0, 0xe3, 0xe3, 0xe3,
                0xe3, 0xe3, 0xe3, 0x11, 0xd2, 0xc4, 0x1d, 0xf0, 0x11, 0xd2, 0xc9, 0x1d, 0xf0, 0xd2, 0xd2, 0xd2,
                0xd2, 0x11, 0xd2, 0x4e, 0x1d, 0xf0, 0x11, 0xd2, 0xd2, 0x1d, 0xf0, 0xd2, 0xd2, 0xd2, 0x11, 0xd2,
                0xd6, 0x1d, 0xf0, 0x11, 0xd2, 0xd8, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5,
                0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0xd2, 0xe4, 0x1d, 0xf0, 0x11, 0xd4,
                0xc5, 0x1d, 0xf0, 0xe3, 0xd2, 0xf3, 0x40, 0x40, 0x83, 0x99, 0x85, 0x81, 0xa3, 0x85, 0x84, 0x40,
                0x82, 0xa8, 0x40, 0xe5, 0x96, 0x93, 0x92, 0x85, 0x99, 0x40, 0xc2, 0x81, 0x95, 0x84, 0x92, 0x85,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xa5, 0x96, 0x93, 0x92, 0x85, 0x99, 0x7c, 0x82, 0x81, 0x95,
                0x84, 0x92, 0x85, 0x4b, 0x96, 0x99, 0x87, 0x11, 0xd5, 0x40, 0x1d, 0xf0, 0x11, 0xd5, 0xd5, 0x1d,
                0xf0, 0xe3, 0xd2, 0xf4, 0x60, 0x40, 0xa4, 0x97, 0x84, 0x81, 0xa3, 0x85, 0x40, 0x82, 0xa8, 0x40,
                0xd1, 0xa4, 0x85, 0x99, 0x87, 0x85, 0x95, 0x40, 0xe6, 0x89, 0x95, 0x92, 0x85, 0x93, 0x94, 0x81,
                0x95, 0x95, 0x40, 0x40, 0x91, 0xa4, 0x85, 0x99, 0x87, 0x85, 0x95, 0x4b, 0xa6, 0x89, 0x95, 0x92,
                0x85, 0x93, 0x94, 0x81, 0x95, 0x95, 0x7c, 0x97, 0x85, 0x82, 0x82, 0x93, 0x85, 0x60, 0x82, 0x85,
                0x81, 0x83, 0x88, 0x4b, 0x83, 0x88, 0x11, 0xd6, 0x5b, 0x1d, 0xf0, 0x11, 0xd6, 0xe5, 0x1d, 0xf0,
                0xe3, 0xd2, 0xf5, 0x40, 0x40, 0xa4, 0x97, 0x84, 0x81, 0xa3, 0x85, 0x40, 0x82, 0xa8, 0x40, 0xd9,
                0x96, 0x82, 0x40, 0xd7, 0x99, 0x89, 0x95, 0xa2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x97, 0x99, 0x89, 0x95, 0xf0, 0xf0, 0xf9, 0xf6, 0x7c, 0x87, 0x94, 0x81, 0x89,
                0x93, 0x4b, 0x83, 0x96, 0x94, 0x11, 0xd7, 0x5b, 0x1d, 0xf0, 0x11, 0xd7, 0x7a, 0x1d, 0xf0, 0xa2,
                0x85, 0x85, 0x40, 0xe2, 0xe8, 0xe2, 0xf2, 0x4b, 0xd1, 0xc3, 0xd3, 0xd3, 0xc9, 0xc2, 0x4d, 0xc3,
                0xd9, 0xc5, 0xc4, 0xc9, 0xe3, 0xe2, 0x5d, 0x40, 0x86, 0x96, 0x99, 0x40, 0x83, 0x96, 0x94, 0x97,
                0x93, 0x85, 0xa3, 0x85, 0x40, 0x83, 0x99, 0x85, 0x84, 0x89, 0xa3, 0xa2, 0x11, 0xd8, 0xe8, 0x1d,
                0xf0, 0x11, 0xd9, 0xd7, 0x1d, 0xf0, 0xd4, 0xe5, 0xe2, 0x40, 0xf3, 0x4b, 0xf8, 0x91, 0x40, 0xd3,
                0x85, 0xa5, 0x85, 0x93, 0x40, 0xf8, 0xf5, 0xf0, 0xf5, 0x11, 0xd9, 0x6b, 0x1d, 0xf0, 0x11, 0x5b,
                0x5f, 0x1d, 0xf8, 0xd3, 0x96, 0x87, 0x96, 0x95, 0x40, 0x7e, 0x7e, 0x7e, 0x6e, 0x11, 0x5b, 0x6a,
                0x1d, 0xc8, 0x13, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x11, 0x5d, 0x6b, 0x1d, 0xf8, 0xd9, 0xe4, 0xd5, 0xd5, 0xc9, 0xd5, 0xc7, 0x40,
                0x40, 0xe3, 0xd2, 0xf5, 0x11, 0x5d, 0x7b, 0x1d, 0xf8, 0x11, 0x5d, 0x7f, 0x1d, 0xf8, 0xff, 0xef
            };
            var rowXml = new string[24];

            RunBytes(data, rowXml);

            Assert.AreEqual("<row>\r\n  <label row=\"0\" col=\"0\" length=\"8\">Terminal</label>\r\n  <label row=\"0\" col=\"9\" length=\"1\"> </label>\r\n  <label row=\"0\" col=\"11\" length=\"8\">CUU0C0  </label>\r\n  <label row=\"0\" col=\"20\" length=\"1\"> </label>\r\n  <label row=\"0\" col=\"66\" length=\"4\">Date</label>\r\n  <label row=\"0\" col=\"71\" length=\"1\"> </label>\r\n  <label row=\"0\" col=\"72\" length=\"8\">08.02.24</label>\r\n</row>", rowXml[0]);
            Assert.AreEqual("<row>\r\n  <label row=\"1\" col=\"1\" length=\"1\"> </label>\r\n  <label row=\"1\" col=\"66\" length=\"4\">Time</label>\r\n  <label row=\"1\" col=\"71\" length=\"1\"> </label>\r\n  <label row=\"1\" col=\"72\" length=\"8\">23:58:09</label>\r\n</row>", rowXml[1]);
            Assert.AreEqual("<row>\r\n  <label row=\"2\" col=\"1\" length=\"1\"> </label>\r\n</row>", rowXml[2]);
            Assert.AreEqual("<row>\r\n  <label row=\"3\" col=\"27\" length=\"12\">TTTTTTTTTTTT</label>\r\n  <label row=\"3\" col=\"40\" length=\"1\"> </label>\r\n  <label row=\"3\" col=\"42\" length=\"4\">KKKK</label>\r\n  <label row=\"3\" col=\"47\" length=\"1\"> </label>\r\n  <label row=\"3\" col=\"48\" length=\"5\">KKKKK</label>\r\n  <label row=\"3\" col=\"54\" length=\"1\"> </label>\r\n  <label row=\"3\" col=\"57\" length=\"12\">555555555555</label>\r\n  <label row=\"3\" col=\"70\" length=\"1\"> </label>\r\n</row>", rowXml[3]);
            Assert.AreEqual("<row>\r\n  <label row=\"4\" col=\"27\" length=\"2\">TT</label>\r\n  <label row=\"4\" col=\"30\" length=\"1\"> </label>\r\n  <label row=\"4\" col=\"32\" length=\"2\">TT</label>\r\n  <label row=\"4\" col=\"35\" length=\"1\"> </label>\r\n  <label row=\"4\" col=\"37\" length=\"2\">TT</label>\r\n  <label row=\"4\" col=\"40\" length=\"1\"> </label>\r\n  <label row=\"4\" col=\"43\" length=\"2\">KK</label>\r\n  <label row=\"4\" col=\"46\" length=\"1\"> </label>\r\n  <label row=\"4\" col=\"49\" length=\"2\">KK</label>\r\n  <label row=\"4\" col=\"52\" length=\"1\"> </label>\r\n  <label row=\"4\" col=\"57\" length=\"2\">55</label>\r\n  <label row=\"4\" col=\"66\" length=\"1\"> </label>\r\n</row>", rowXml[4]);
            Assert.AreEqual("<row>\r\n  <label row=\"5\" col=\"27\" length=\"2\">TT</label>\r\n  <label row=\"5\" col=\"30\" length=\"1\"> </label>\r\n  <label row=\"5\" col=\"32\" length=\"2\">TT</label>\r\n  <label row=\"5\" col=\"35\" length=\"1\"> </label>\r\n  <label row=\"5\" col=\"37\" length=\"2\">TT</label>\r\n  <label row=\"5\" col=\"40\" length=\"1\"> </label>\r\n  <label row=\"5\" col=\"43\" length=\"2\">KK</label>\r\n  <label row=\"5\" col=\"46\" length=\"1\"> </label>\r\n  <label row=\"5\" col=\"48\" length=\"2\">KK</label>\r\n  <label row=\"5\" col=\"51\" length=\"1\"> </label>\r\n  <label row=\"5\" col=\"57\" length=\"2\">55</label>\r\n  <label row=\"5\" col=\"66\" length=\"1\"> </label>\r\n</row>", rowXml[5]);
            Assert.AreEqual("<row>\r\n  <label row=\"6\" col=\"32\" length=\"2\">TT</label>\r\n  <label row=\"6\" col=\"35\" length=\"1\"> </label>\r\n  <label row=\"6\" col=\"43\" length=\"2\">KK</label>\r\n  <label row=\"6\" col=\"46\" length=\"1\"> </label>\r\n  <label row=\"6\" col=\"47\" length=\"2\">KK</label>\r\n  <label row=\"6\" col=\"50\" length=\"1\"> </label>\r\n  <label row=\"6\" col=\"57\" length=\"2\">55</label>\r\n</row>", rowXml[6]);
            Assert.AreEqual("<row>\r\n  <label row=\"7\" col=\"8\" length=\"2\">!l</label>\r\n  <label row=\"7\" col=\"11\" length=\"1\"> </label>\r\n  <label row=\"7\" col=\"16\" length=\"10\">_,,,---,,_</label>\r\n  <label row=\"7\" col=\"27\" length=\"1\"> </label>\r\n  <label row=\"7\" col=\"32\" length=\"2\">TT</label>\r\n  <label row=\"7\" col=\"35\" length=\"1\"> </label>\r\n  <label row=\"7\" col=\"43\" length=\"5\">KK KK</label>\r\n  <label row=\"7\" col=\"49\" length=\"1\"> </label>\r\n  <label row=\"7\" col=\"57\" length=\"2\">55</label>\r\n  <label row=\"7\" col=\"60\" length=\"1\"> </label>\r\n</row>", rowXml[7]);
            Assert.AreEqual("<row>\r\n  <label row=\"8\" col=\"1\" length=\"27\">ZZZzz /,'.-'`'    -.  ;-;;,</label>\r\n  <label row=\"8\" col=\"29\" length=\"1\"> </label>\r\n  <label row=\"8\" col=\"32\" length=\"2\">TT</label>\r\n  <label row=\"8\" col=\"35\" length=\"1\"> </label>\r\n  <label row=\"8\" col=\"43\" length=\"4\">KKKK</label>\r\n  <label row=\"8\" col=\"48\" length=\"1\"> </label>\r\n  <label row=\"8\" col=\"57\" length=\"11\">55555555555</label>\r\n  <label row=\"8\" col=\"69\" length=\"1\"> </label>\r\n</row>", rowXml[8]);
            Assert.AreEqual("<row>\r\n  <label row=\"9\" col=\"6\" length=\"24\">!,4-  ) )-,_. ,( (  ''-'</label>\r\n  <label row=\"9\" col=\"31\" length=\"1\"> </label>\r\n  <label row=\"9\" col=\"32\" length=\"2\">TT</label>\r\n  <label row=\"9\" col=\"35\" length=\"1\"> </label>\r\n  <label row=\"9\" col=\"43\" length=\"5\">KKKKK</label>\r\n  <label row=\"9\" col=\"49\" length=\"1\"> </label>\r\n  <label row=\"9\" col=\"67\" length=\"2\">55</label>\r\n  <label row=\"9\" col=\"70\" length=\"1\"> </label>\r\n</row>", rowXml[9]);
            Assert.AreEqual("<row>\r\n  <label row=\"10\" col=\"5\" length=\"20\">'---''(_/--'  `-')_)</label>\r\n  <label row=\"10\" col=\"26\" length=\"1\"> </label>\r\n  <label row=\"10\" col=\"32\" length=\"2\">TT</label>\r\n  <label row=\"10\" col=\"35\" length=\"1\"> </label>\r\n  <label row=\"10\" col=\"43\" length=\"2\">KK</label>\r\n  <label row=\"10\" col=\"46\" length=\"1\"> </label>\r\n  <label row=\"10\" col=\"47\" length=\"2\">KK</label>\r\n  <label row=\"10\" col=\"50\" length=\"1\"> </label>\r\n  <label row=\"10\" col=\"67\" length=\"2\">55</label>\r\n  <label row=\"10\" col=\"70\" length=\"1\"> </label>\r\n</row>", rowXml[10]);
            Assert.AreEqual("<row>\r\n  <label row=\"11\" col=\"32\" length=\"2\">TT</label>\r\n  <label row=\"11\" col=\"35\" length=\"1\"> </label>\r\n  <label row=\"11\" col=\"43\" length=\"2\">KK</label>\r\n  <label row=\"11\" col=\"46\" length=\"1\"> </label>\r\n  <label row=\"11\" col=\"48\" length=\"2\">KK</label>\r\n  <label row=\"11\" col=\"51\" length=\"1\"> </label>\r\n  <label row=\"11\" col=\"67\" length=\"2\">55</label>\r\n  <label row=\"11\" col=\"70\" length=\"1\"> </label>\r\n</row>", rowXml[11]);
            Assert.AreEqual("<row>\r\n  <label row=\"12\" col=\"7\" length=\"12\">The MVS 3.8j</label>\r\n  <label row=\"12\" col=\"20\" length=\"1\"> </label>\r\n  <label row=\"12\" col=\"32\" length=\"2\">TT</label>\r\n  <label row=\"12\" col=\"35\" length=\"1\"> </label>\r\n  <label row=\"12\" col=\"43\" length=\"2\">KK</label>\r\n  <label row=\"12\" col=\"46\" length=\"1\"> </label>\r\n  <label row=\"12\" col=\"49\" length=\"2\">KK</label>\r\n  <label row=\"12\" col=\"52\" length=\"1\"> </label>\r\n  <label row=\"12\" col=\"67\" length=\"2\">55</label>\r\n  <label row=\"12\" col=\"70\" length=\"1\"> </label>\r\n</row>", rowXml[12]);
            Assert.AreEqual("<row>\r\n  <label row=\"13\" col=\"5\" length=\"16\">Tur(n)key System</label>\r\n  <label row=\"13\" col=\"22\" length=\"1\"> </label>\r\n  <label row=\"13\" col=\"32\" length=\"2\">TT</label>\r\n  <label row=\"13\" col=\"35\" length=\"1\"> </label>\r\n  <label row=\"13\" col=\"43\" length=\"2\">KK</label>\r\n  <label row=\"13\" col=\"46\" length=\"1\"> </label>\r\n  <label row=\"13\" col=\"50\" length=\"2\">KK</label>\r\n  <label row=\"13\" col=\"53\" length=\"1\"> </label>\r\n  <label row=\"13\" col=\"67\" length=\"2\">55</label>\r\n  <label row=\"13\" col=\"70\" length=\"1\"> </label>\r\n</row>", rowXml[13]);
            Assert.AreEqual("<row>\r\n  <label row=\"14\" col=\"30\" length=\"6\">TTTTTT</label>\r\n  <label row=\"14\" col=\"37\" length=\"1\"> </label>\r\n  <label row=\"14\" col=\"42\" length=\"4\">KKKK</label>\r\n  <label row=\"14\" col=\"47\" length=\"1\"> </label>\r\n  <label row=\"14\" col=\"51\" length=\"3\">KKK</label>\r\n  <label row=\"14\" col=\"55\" length=\"1\"> </label>\r\n  <label row=\"14\" col=\"57\" length=\"11\">55555555555</label>\r\n  <label row=\"14\" col=\"69\" length=\"1\"> </label>\r\n</row>", rowXml[14]);
            Assert.AreEqual("<row />", rowXml[15]);
            Assert.AreEqual("<row>\r\n  <label row=\"16\" col=\"6\" length=\"52\">TK3  created by Volker Bandke      volker@bandke.org</label>\r\n  <label row=\"16\" col=\"65\" length=\"1\"> </label>\r\n</row>", rowXml[16]);
            Assert.AreEqual("<row>\r\n  <label row=\"17\" col=\"6\" length=\"69\">TK4- update by Juergen Winkelmann  juergen.winkelmann@pebble-beach.ch</label>\r\n  <label row=\"17\" col=\"76\" length=\"1\"> </label>\r\n</row>", rowXml[17]);
            Assert.AreEqual("<row>\r\n  <label row=\"18\" col=\"6\" length=\"53\">TK5  update by Rob Prins           prin0096@gmail.com</label>\r\n  <label row=\"18\" col=\"60\" length=\"1\"> </label>\r\n</row>", rowXml[18]);
            Assert.AreEqual("<row>\r\n  <label row=\"19\" col=\"11\" length=\"45\">see SYS2.JCLLIB(CREDITS) for complete credits</label>\r\n  <label row=\"19\" col=\"57\" length=\"1\"> </label>\r\n</row>", rowXml[19]);
            Assert.AreEqual("<row>\r\n  <label row=\"20\" col=\"24\" length=\"19\">MVS 3.8j Level 8505</label>\r\n  <label row=\"20\" col=\"44\" length=\"1\"> </label>\r\n</row>", rowXml[20]);
            Assert.AreEqual("<row />", rowXml[21]);
            Assert.AreEqual("<row>\r\n  <label row=\"22\" col=\"0\" length=\"10\">Logon ===&gt;</label>\r\n  <input row=\"22\" col=\"11\" address=\"1771\" cursor=\"0\" length=\"69\">                                                                     </input>\r\n</row>", rowXml[22]);
            Assert.AreEqual("<row>\r\n  <label row=\"23\" col=\"0\" length=\"59\">                                                           </label>\r\n  <label row=\"23\" col=\"60\" length=\"12\">RUNNING  TK5</label>\r\n  <label row=\"23\" col=\"76\" length=\"1\"> </label>\r\n</row>", rowXml[23]);
        }

        [Test]
        public void EnterCurrentPasswordForHerc02()
        {
            var data = new byte[]
            {
                0xf5, 0xc3, 0x11, 0x5d,
                0x7f, 0x1d, 0x40, 0x11, 0x40, 0x40, 0x1d, 0xc8, 0xc5, 0xd5, 0xe3, 0xc5, 0xd9, 0x40, 0xc3, 0xe4,
                0xd9, 0xd9, 0xc5, 0xd5, 0xe3, 0x40, 0xd7, 0xc1, 0xe2, 0xe2, 0xe6, 0xd6, 0xd9, 0xc4, 0x40, 0xc6,
                0xd6, 0xd9, 0x40, 0xc8, 0xc5, 0xd9, 0xc3, 0xf0, 0xf2, 0x60, 0x1d, 0x40, 0x11, 0xc1, 0x50, 0x1d,
                0x4c, 0x13, 0xff, 0xef
            };
            var rowXml = new string[24];

            RunBytes(data, rowXml);

            Assert.AreEqual("<row>\r\n  <input row=\"0\" col=\"0\" address=\"1920\" length=\"1\"> </input>\r\n  <input row=\"0\" col=\"1\" address=\"1\" length=\"34\">ENTER CURRENT PASSWORD FOR HERC02-</input>\r\n  <input row=\"0\" col=\"36\" address=\"36\" length=\"44\">                                            </input>\r\n</row>", rowXml[0]);
            Assert.AreEqual("<row>\r\n  <input row=\"1\" col=\"1\" address=\"81\" cursor=\"0\" length=\"79\">                                                                               </input>\r\n</row>", rowXml[1]);
            Assert.AreEqual("<row />", rowXml[2]);
            Assert.AreEqual("<row />", rowXml[3]);
            Assert.AreEqual("<row />", rowXml[4]);
            Assert.AreEqual("<row />", rowXml[5]);
            Assert.AreEqual("<row />", rowXml[6]);
            Assert.AreEqual("<row />", rowXml[7]);
            Assert.AreEqual("<row />", rowXml[8]);
            Assert.AreEqual("<row />", rowXml[9]);
            Assert.AreEqual("<row />", rowXml[10]);
            Assert.AreEqual("<row />", rowXml[11]);
            Assert.AreEqual("<row />", rowXml[12]);
            Assert.AreEqual("<row />", rowXml[13]);
            Assert.AreEqual("<row />", rowXml[14]);
            Assert.AreEqual("<row />", rowXml[15]);
            Assert.AreEqual("<row />", rowXml[16]);
            Assert.AreEqual("<row />", rowXml[17]);
            Assert.AreEqual("<row />", rowXml[18]);
            Assert.AreEqual("<row />", rowXml[19]);
            Assert.AreEqual("<row />", rowXml[20]);
            Assert.AreEqual("<row />", rowXml[21]);
            Assert.AreEqual("<row />", rowXml[22]);
            Assert.AreEqual("<row />", rowXml[23]);
        }

        [Test]
        public void DSList3Dot4()
        {
            var data = new byte[]
            {
                0xf5, 0xc3, 0x11, 0x40,
                0x40, 0x1d, 0xe8, 0x28, 0x42, 0xf7, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
                0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
                0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x40, 0x40, 0xd9, 0xc6, 0xc5, 0x40, 0xc4, 0xe2, 0xd3, 0xc9,
                0xe2, 0xe3, 0x40, 0x40, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
                0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
                0x60, 0x60, 0x60, 0x60, 0x60, 0x11, 0xc1, 0x50, 0x1d, 0xe8, 0xc3, 0x96, 0x94, 0x94, 0x81, 0x95,
                0x84, 0x40, 0x7e, 0x7e, 0x7e, 0x6e, 0x11, 0xc1, 0x5d, 0x1d, 0xc8, 0x28, 0x41, 0xf4, 0x28, 0x42,
                0xf2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x11, 0xc3, 0x6f, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf1, 0x11, 0x4a, 0x5f,
                0x13, 0x11, 0xc2, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xc3, 0xf0,
                0x1d, 0xe8, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf7, 0x40, 0x40, 0x40, 0x40, 0x40, 0x82, 0x93, 0x81,
                0x95, 0x92, 0x11, 0xc3, 0x7b, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf1, 0x60, 0x40, 0x84,
                0x89, 0xa2, 0x97, 0x93, 0x81, 0xa8, 0x40, 0x84, 0x81, 0xa3, 0x81, 0x40, 0xa2, 0x85, 0xa3, 0x40,
                0x93, 0x89, 0xa2, 0xa3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x11, 0xc5, 0x40, 0x1d, 0xe8, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf7, 0x40, 0x40, 0x40, 0x40,
                0x40, 0xc1, 0xd3, 0xd3, 0xd6, 0xc3, 0x11, 0xc5, 0x4b, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf1, 0x60, 0x40, 0x81, 0x93, 0x93, 0x96, 0x83, 0x81, 0xa3, 0x85, 0x40, 0x81, 0x40, 0x95, 0x85,
                0xa6, 0x40, 0x84, 0x81, 0xa3, 0x81, 0x40, 0xa2, 0x85, 0xa3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xc6, 0x50, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42,
                0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x11, 0xc7, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xc8, 0xf0,
                0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0x4a, 0x40, 0x1d, 0x60, 0x28, 0x41,
                0x00, 0x28, 0x42, 0xf1, 0x28, 0x42, 0xf5, 0x40, 0x40, 0x40, 0x40, 0x40, 0xc4, 0x81, 0xa3, 0x81,
                0x40, 0xa2, 0x85, 0xa3, 0x40, 0x95, 0x81, 0x94, 0x85, 0x40, 0x97, 0x99, 0x85, 0x86, 0x89, 0xa7,
                0x11, 0x4a, 0x5a, 0x1d, 0xe8, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf7, 0x7e, 0x7e, 0x6e, 0x11, 0x4a,
                0x5e, 0x1d, 0xc8, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x41, 0xf4, 0xc8, 0xc5, 0xd9, 0xc3,
                0xf0, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x4b, 0x4b, 0x1d, 0x60, 0x28, 0x41, 0x00,
                0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x11, 0x4b, 0x50, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2,
                0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x11, 0x4c, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf5, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0xe5, 0x96, 0x93, 0xa4, 0x94, 0x85, 0x40, 0xa2, 0x85, 0x99, 0x89,
                0x81, 0x93, 0x40, 0x95, 0xa4, 0x94, 0x82, 0x85, 0x99, 0x11, 0x4c, 0x7a, 0x1d, 0xe8, 0x28, 0x41,
                0x00, 0x28, 0x42, 0xf7, 0x7e, 0x7e, 0x6e, 0x11, 0x4c, 0x7e, 0x1d, 0xc8, 0x28, 0x41, 0x00, 0x28,
                0x42, 0xf2, 0x28, 0x41, 0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x4d, 0xc5, 0x1d, 0x60,
                0x28, 0x41, 0x00, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x11, 0x4d, 0xf0, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0x4f, 0x40, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0x50, 0x50, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x11, 0xd1, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xc4, 0x81, 0xa3, 0x81, 0x40, 0xa2, 0x85, 0xa3, 0x40, 0xa2,
                0x85, 0x93, 0x85, 0x83, 0xa3, 0x89, 0x96, 0x95, 0x40, 0x83, 0x96, 0x84, 0x85, 0xa2, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x11, 0xd2, 0xf0, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xd4, 0x40, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x11, 0xd4, 0x4a, 0x1d, 0xe8, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf7, 0xc1, 0x11, 0xd4,
                0x4c, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf1, 0x60, 0x40, 0xc1, 0x93, 0x93, 0x96, 0x83,
                0x81, 0xa3, 0x85, 0x40, 0x93, 0x89, 0x92, 0x85, 0x40, 0x40, 0x11, 0xd4, 0x5e, 0x1d, 0xe8, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf7, 0xc2, 0x11, 0xd4, 0x60, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf1, 0x60, 0x40, 0xc2, 0x99, 0x96, 0xa6, 0xa2, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x11, 0xd4, 0xf2, 0x1d, 0xe8, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf7, 0xc3, 0x11, 0xd4,
                0xf4, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf1, 0x60, 0x40, 0xc3, 0x81, 0xa3, 0x81, 0x93,
                0x96, 0x87, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x11, 0xd5, 0x50, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xd5, 0x5a, 0x1d, 0xe8, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf7, 0xc4, 0x11, 0xd5, 0x5c, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf1, 0x60, 0x40, 0xc4, 0x85, 0x93, 0x85, 0xa3, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x11, 0xd5, 0x6e, 0x1d, 0xe8, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf7, 0xc5, 0x11, 0xd5,
                0xf0, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf1, 0x60, 0x40, 0xc5, 0x84, 0x89, 0xa3, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xd6, 0xc2, 0x1d, 0xe8, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf7, 0xc9, 0x11, 0xd6, 0xc4, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf1, 0x60, 0x40, 0xc9, 0x95, 0x86, 0x96, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xd6, 0x60, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x11, 0xd6, 0x6a, 0x1d, 0xe8, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf7, 0xd3, 0x11, 0xd6,
                0x6c, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf1, 0x60, 0x40, 0xd3, 0x89, 0xa2, 0xa3, 0x83,
                0x81, 0xa3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xd6, 0x7e, 0x1d, 0xe8, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf7, 0xd9, 0x11, 0xd7, 0x40, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf1, 0x60, 0x40, 0xd9, 0x85, 0x95, 0x81, 0x94, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x11, 0xd7, 0xd2, 0x1d, 0xe8, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf7, 0xe2, 0x11, 0xd7,
                0xd4, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf1, 0x60, 0x40, 0xe2, 0x88, 0x96, 0x99, 0xa3,
                0x40, 0x89, 0x95, 0x86, 0x96, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x11, 0xd7, 0xf0, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xd7, 0x7a, 0x1d, 0xe8, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf7, 0xe4, 0x11, 0xd7, 0x7c, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf1, 0x60, 0x40, 0xe4, 0x95, 0x83, 0x81, 0xa3, 0x81, 0x93, 0x96, 0x87, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x11, 0xd8, 0x4e, 0x1d, 0xe8, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf7, 0xe5, 0x11, 0xd8,
                0x50, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf1, 0x60, 0x40, 0xe5, 0x89, 0x85, 0xa6, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xd8, 0xe2, 0x1d, 0xe8, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf7, 0xe9, 0x11, 0xd8, 0xe4, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf1, 0x60, 0x40, 0xc3, 0x96, 0x94, 0x97, 0x99, 0x85, 0xa2, 0xa2, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xd9, 0x40, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0x5a, 0x50, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x11, 0x5b, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x11, 0x5c, 0xf0, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0xf7, 0xf0, 0xf6, 0xf8, 0xd2, 0x40, 0xc6, 0xd9, 0xc5, 0xc5, 0xff, 0xef
            };
            var rowXml = new string[24];

            RunBytes(data, rowXml);

            Assert.AreEqual("<row>\r\n  <label row=\"0\" col=\"1\" length=\"79\">--------------------------------  RFE DSLIST  ---------------------------------</label>\r\n</row>", rowXml[0]);
            Assert.AreEqual("<row>\r\n  <label row=\"1\" col=\"1\" length=\"12\">Command ===&gt;</label>\r\n  <input row=\"1\" col=\"14\" address=\"94\" length=\"66\">                                                                  </input>\r\n</row>", rowXml[1]);
            Assert.AreEqual("<row>\r\n  <label row=\"2\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[2]);
            Assert.AreEqual("<row>\r\n  <label row=\"3\" col=\"0\" length=\"1\"> </label>\r\n  <label row=\"3\" col=\"1\" length=\"10\">     blank</label>\r\n  <label row=\"3\" col=\"12\" length=\"68\">- display data set list                                             </label>\r\n</row>", rowXml[3]);
            Assert.AreEqual("<row>\r\n  <label row=\"4\" col=\"1\" length=\"10\">     ALLOC</label>\r\n  <label row=\"4\" col=\"12\" length=\"68\">- allocate a new data set                                           </label>\r\n</row>", rowXml[4]);
            Assert.AreEqual("<row>\r\n  <label row=\"5\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[5]);
            Assert.AreEqual("<row>\r\n  <label row=\"6\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[6]);
            Assert.AreEqual("<row>\r\n  <label row=\"7\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[7]);
            Assert.AreEqual("<row>\r\n  <label row=\"8\" col=\"1\" length=\"25\">     Data set name prefix</label>\r\n  <label row=\"8\" col=\"27\" length=\"3\">==&gt;</label>\r\n  <input row=\"8\" col=\"31\" address=\"671\" cursor=\"0\" length=\"44\">HERC01                                      </input>\r\n  <label row=\"8\" col=\"76\" length=\"4\">    </label>\r\n</row>", rowXml[8]);
            Assert.AreEqual("<row>\r\n  <label row=\"9\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[9]);
            Assert.AreEqual("<row>\r\n  <label row=\"10\" col=\"0\" length=\"26\">      Volume serial number</label>\r\n  <label row=\"10\" col=\"27\" length=\"3\">==&gt;</label>\r\n  <input row=\"10\" col=\"31\" address=\"831\" length=\"6\">      </input>\r\n  <label row=\"10\" col=\"38\" length=\"42\">                                          </label>\r\n</row>", rowXml[10]);
            Assert.AreEqual("<row>\r\n  <label row=\"11\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[11]);
            Assert.AreEqual("<row>\r\n  <label row=\"12\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[12]);
            Assert.AreEqual("<row>\r\n  <label row=\"13\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[13]);
            Assert.AreEqual("<row>\r\n  <label row=\"14\" col=\"0\" length=\"80\">      Data set selection codes                                                  </label>\r\n</row>", rowXml[14]);
            Assert.AreEqual("<row>\r\n  <label row=\"15\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[15]);
            Assert.AreEqual("<row>\r\n  <label row=\"16\" col=\"0\" length=\"10\">          </label>\r\n  <label row=\"16\" col=\"11\" length=\"1\">A</label>\r\n  <label row=\"16\" col=\"13\" length=\"17\">- Allocate like  </label>\r\n  <label row=\"16\" col=\"31\" length=\"1\">B</label>\r\n  <label row=\"16\" col=\"33\" length=\"17\">- Browse         </label>\r\n  <label row=\"16\" col=\"51\" length=\"1\">C</label>\r\n  <label row=\"16\" col=\"53\" length=\"27\">- Catalog                  </label>\r\n</row>", rowXml[16]);
            Assert.AreEqual("<row>\r\n  <label row=\"17\" col=\"0\" length=\"10\">          </label>\r\n  <label row=\"17\" col=\"11\" length=\"1\">D</label>\r\n  <label row=\"17\" col=\"13\" length=\"17\">- Delete         </label>\r\n  <label row=\"17\" col=\"31\" length=\"1\">E</label>\r\n  <label row=\"17\" col=\"33\" length=\"17\">- Edit           </label>\r\n  <label row=\"17\" col=\"51\" length=\"1\">I</label>\r\n  <label row=\"17\" col=\"53\" length=\"27\">- Info                     </label>\r\n</row>", rowXml[17]);
            Assert.AreEqual("<row>\r\n  <label row=\"18\" col=\"0\" length=\"10\">          </label>\r\n  <label row=\"18\" col=\"11\" length=\"1\">L</label>\r\n  <label row=\"18\" col=\"13\" length=\"17\">- Listcat        </label>\r\n  <label row=\"18\" col=\"31\" length=\"1\">R</label>\r\n  <label row=\"18\" col=\"33\" length=\"17\">- Rename         </label>\r\n  <label row=\"18\" col=\"51\" length=\"1\">S</label>\r\n  <label row=\"18\" col=\"53\" length=\"27\">- Short info               </label>\r\n</row>", rowXml[18]);
            Assert.AreEqual("<row>\r\n  <label row=\"19\" col=\"0\" length=\"10\">          </label>\r\n  <label row=\"19\" col=\"11\" length=\"1\">U</label>\r\n  <label row=\"19\" col=\"13\" length=\"17\">- Uncatalog      </label>\r\n  <label row=\"19\" col=\"31\" length=\"1\">V</label>\r\n  <label row=\"19\" col=\"33\" length=\"17\">- View           </label>\r\n  <label row=\"19\" col=\"51\" length=\"1\">Z</label>\r\n  <label row=\"19\" col=\"53\" length=\"27\">- Compress                 </label>\r\n</row>", rowXml[19]);
            Assert.AreEqual("<row>\r\n  <label row=\"20\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[20]);
            Assert.AreEqual("<row>\r\n  <label row=\"21\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[21]);
            Assert.AreEqual("<row>\r\n  <label row=\"22\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[22]);
            Assert.AreEqual("<row>\r\n  <label row=\"23\" col=\"0\" length=\"80\">                                                                      7068K FREE</label>\r\n</row>", rowXml[23]);
        }

        [Test]
        public void EditRFEDSLIST()
        {
            var data = new byte[]
            {
                0xf5, 0xc3, 0x11, 0x40,
                0x40, 0x1d, 0xe8, 0x28, 0x42, 0xf7, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
                0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
                0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x40, 0x40, 0xd9, 0xc6, 0xc5, 0x40, 0xc4, 0xe2, 0xd3, 0xc9,
                0xe2, 0xe3, 0x40, 0x40, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
                0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x40, 0xd9, 0x96, 0xa6, 0x40, 0xf1,
                0x40, 0x96, 0x86, 0x40, 0xf2, 0x11, 0xc1, 0x50, 0x1d, 0xe8, 0xc3, 0x96, 0x94, 0x94, 0x81, 0x95,
                0x84, 0x40, 0x7e, 0x7e, 0x7e, 0x6e, 0x11, 0xc1, 0x5d, 0x1d, 0xc8, 0x28, 0x41, 0xf4, 0x28, 0x42,
                0xf2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x11, 0xc2, 0x4e, 0x1d, 0xe8, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf7, 0xe2, 0x83, 0x99, 0x96,
                0x93, 0x93, 0x40, 0x7e, 0x7e, 0x7e, 0x6e, 0x11, 0xc2, 0x5a, 0x1d, 0xc8, 0x28, 0x41, 0xf4, 0x28,
                0x42, 0xf2, 0xc3, 0xe2, 0xd9, 0x40, 0x11, 0xc2, 0x5f, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf1, 0x11, 0xc3, 0x6f, 0x1d, 0x60, 0x11, 0xc1, 0x5e, 0x13, 0x11, 0xc2, 0x60, 0x1d, 0xe8, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf7, 0x28, 0x42, 0xf6, 0xe2, 0x40, 0x28, 0x41, 0xf4, 0xc4, 0xc1, 0xe3,
                0xc1, 0x60, 0xe2, 0xc5, 0xe3, 0x60, 0xd5, 0xc1, 0xd4, 0xc5, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
                0x60, 0x28, 0x41, 0x00, 0x40, 0x28, 0x41, 0xf4, 0xe5, 0xd6, 0xd3, 0xe4, 0xd4, 0xc5, 0x28, 0x41,
                0x00, 0x40, 0x28, 0x41, 0xf4, 0xc1, 0xd3, 0xe3, 0xd9, 0xd2, 0x28, 0x41, 0x00, 0x40, 0x28, 0x41,
                0xf4, 0xe4, 0xe2, 0xe3, 0xd9, 0xd2, 0x28, 0x41, 0x00, 0x40, 0x28, 0x41, 0xf4, 0xd6, 0xd9, 0xc7,
                0x28, 0x41, 0x00, 0x40, 0x28, 0x41, 0xf4, 0xc6, 0xd9, 0xd4, 0xe3, 0x28, 0x41, 0x00, 0x40, 0x28,
                0x41, 0xf4, 0x6c, 0x28, 0x41, 0x00, 0x40, 0x28, 0x41, 0xf4, 0xe7, 0xe3, 0x28, 0x41, 0x00, 0x40,
                0x28, 0x41, 0xf4, 0xd3, 0xd9, 0xc5, 0xc3, 0xd3, 0x28, 0x41, 0x00, 0x40, 0x28, 0x41, 0xf4, 0xc2,
                0xd3, 0xd2, 0xe2, 0xe9, 0x28, 0x41, 0x00, 0x40, 0x28, 0x41, 0xf4, 0xd9, 0xc5, 0xc6, 0xc4, 0xe3,
                0x28, 0x41, 0x00, 0x40, 0x28, 0x41, 0xf4, 0xc3, 0xd9, 0xc5, 0xc4, 0xe3, 0x11, 0xc3, 0xf0, 0x1d,
                0xc8, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x7d, 0x11, 0xc3, 0xf2, 0x1d, 0x60,
                0x28, 0x41, 0x00, 0x28, 0x42, 0xf1, 0x28, 0x42, 0xf5, 0xc8, 0xc5, 0xd9, 0xc3, 0xf0, 0xf1, 0x4b,
                0xe2, 0xc3, 0xd9, 0xc1, 0xe3, 0xc3, 0xc8, 0x4b, 0xe3, 0xe7, 0xe3, 0x40, 0x40, 0x28, 0x42, 0xf4,
                0x40, 0xe6, 0xd6, 0xd9, 0xd2, 0xf0, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf1, 0x40, 0x40, 0x40,
                0x40, 0x40, 0xf1, 0x40, 0xd7, 0xd6, 0x40, 0x40, 0xc6, 0xc2, 0x40, 0xf1, 0xf0, 0xf0, 0x40, 0x40,
                0xf1, 0x40, 0x40, 0x40, 0x40, 0xf8, 0xf0, 0x40, 0x40, 0xf4, 0xf0, 0xf0, 0xf0, 0x40, 0xf2, 0xf4,
                0xf0, 0xf3, 0xf7, 0x40, 0xf2, 0xf4, 0xf0, 0xf3, 0xf7, 0x11, 0xc5, 0x40, 0x1d, 0xe8, 0x28, 0x41,
                0x00, 0x28, 0x42, 0xf7, 0x28, 0x42, 0xf6, 0x40, 0x40, 0x5c, 0x5c, 0xc5, 0xd5, 0xc4, 0x5c, 0x5c,
                0x11, 0xc5, 0x4a, 0x1d, 0x60, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0xe3, 0xd6,
                0xe3, 0xc1, 0xd3, 0xe2, 0x7a, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf1, 0x40, 0xe3, 0xd9,
                0xd2, 0xe2, 0x40, 0xc1, 0xd3, 0xd3, 0xd6, 0xc3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0xf1, 0x40, 0xe3, 0xd9, 0xd2, 0xe2, 0x40, 0xe4, 0xe2, 0xc5, 0xc4, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xf1, 0x40, 0xc5, 0xe7, 0xe3, 0xc5, 0xd5, 0xe3, 0xe2, 0x40, 0x40, 0x40, 0x40,
                0x11, 0xc6, 0x50, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xc7, 0x60, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xc8, 0xf0, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x11, 0x4a, 0x40, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x11, 0x4b, 0x50, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0x4c, 0x60, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0x4d, 0xf0, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x11, 0x4f, 0x40, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x11, 0x50, 0x50, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xd1, 0x60, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xd2, 0xf0, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x11, 0xd4, 0x40, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x11, 0xd5, 0x50, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xd6, 0x60, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0xd7, 0xf0, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x11, 0xd9, 0x40, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x11, 0x5a, 0x50, 0x28, 0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0x5b, 0x60, 0x28,
                0x41, 0x00, 0x28, 0x42, 0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0x5c, 0xf0, 0x28, 0x41, 0x00, 0x28, 0x42,
                0xf2, 0x28, 0x42, 0xf1, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf7, 0xf0, 0xf3, 0xf6, 0xd2, 0x40,
                0xc6, 0xd9, 0xc5, 0xc5, 0xff, 0xef
            };
            var rowXml = new string[24];

            RunBytes(data, rowXml);

            Assert.AreEqual("<row>\r\n  <label row=\"0\" col=\"1\" length=\"79\">--------------------------------  RFE DSLIST  ---------------------- Row 1 of 2</label>\r\n</row>", rowXml[0]);
            Assert.AreEqual("<row>\r\n  <label row=\"1\" col=\"1\" length=\"12\">Command ===&gt;</label>\r\n  <input row=\"1\" col=\"14\" address=\"94\" cursor=\"0\" length=\"48\">                                                </input>\r\n  <label row=\"1\" col=\"63\" length=\"11\">Scroll ===&gt;</label>\r\n  <input row=\"1\" col=\"75\" address=\"155\" length=\"5\">CSR  </input>\r\n</row>", rowXml[1]);
            Assert.AreEqual("<row>\r\n  <label row=\"2\" col=\"0\" length=\"1\"> </label>\r\n  <label row=\"2\" col=\"1\" length=\"79\">S DATA-SET-NAME------- VOLUME ALTRK USTRK ORG FRMT % XT LRECL BLKSZ REFDT CREDT</label>\r\n</row>", rowXml[2]);
            Assert.AreEqual("<row>\r\n  <label row=\"3\" col=\"0\" length=\"1\"> </label>\r\n  <input row=\"3\" col=\"1\" address=\"33009\" length=\"1\">'</input>\r\n  <label row=\"3\" col=\"3\" length=\"77\">HERC01.SCRATCH.TXT   WORK01     1     1 PO  FB 100  1    80  4000 24037 24037</label>\r\n</row>", rowXml[3]);
            Assert.AreEqual("<row>\r\n  <label row=\"4\" col=\"1\" length=\"9\">  **END**</label>\r\n  <label row=\"4\" col=\"11\" length=\"69\">   TOTALS:       1 TRKS ALLOC         1 TRKS USED       1 EXTENTS    </label>\r\n</row>", rowXml[4]);
            Assert.AreEqual("<row>\r\n  <label row=\"5\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[5]);
            Assert.AreEqual("<row>\r\n  <label row=\"6\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[6]);
            Assert.AreEqual("<row>\r\n  <label row=\"7\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[7]);
            Assert.AreEqual("<row>\r\n  <label row=\"8\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[8]);
            Assert.AreEqual("<row>\r\n  <label row=\"9\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[9]);
            Assert.AreEqual("<row>\r\n  <label row=\"10\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[10]);
            Assert.AreEqual("<row>\r\n  <label row=\"11\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[11]);
            Assert.AreEqual("<row>\r\n  <label row=\"12\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[12]);
            Assert.AreEqual("<row>\r\n  <label row=\"13\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[13]);
            Assert.AreEqual("<row>\r\n  <label row=\"14\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[14]);
            Assert.AreEqual("<row>\r\n  <label row=\"15\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[15]);
            Assert.AreEqual("<row>\r\n  <label row=\"16\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[16]);
            Assert.AreEqual("<row>\r\n  <label row=\"17\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[17]);
            Assert.AreEqual("<row>\r\n  <label row=\"18\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[18]);
            Assert.AreEqual("<row>\r\n  <label row=\"19\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[19]);
            Assert.AreEqual("<row>\r\n  <label row=\"20\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[20]);
            Assert.AreEqual("<row>\r\n  <label row=\"21\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[21]);
            Assert.AreEqual("<row>\r\n  <label row=\"22\" col=\"0\" length=\"80\">                                                                                </label>\r\n</row>", rowXml[22]);
            Assert.AreEqual("<row>\r\n  <label row=\"23\" col=\"0\" length=\"80\">                                                                      7036K FREE</label>\r\n</row>", rowXml[23]);
        }
        
        [Test]
        public void WriteRepeatToAddress()
        {
            var data = new byte[]
            {
                0xf1, 0xc3, 0x11, 0x40, 0x40, 0x13, 0x3c, 0x5d, 0x7f, 0x00, 0xff, 0xef
            };

            _service.ProcessOutbound(data, 0, 0);
        }

        [TearDown]
        public void TearDown()
        {
            _service?.Dispose();
        }
    }
}
