using Moq.Sequences;
using Services;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;
using Tests.Helpers;

namespace Tests
{
    public class NetworkServiceTests
    {
        private NetworkService<XElement> _service;

        [SetUp]
        public void SetUp()
        {
            _service = new NetworkService<XElement> (new Xml3270Translator());
        }

        [Test]
        public void Outbound_1Response_AllProtected()
        {
            var data = new byte[] { 0xf5, 0x42, 0x11, 0x40,
                0x40, 0x1d, 0x60, 0xc8, 0x85, 0x99, 0x83, 0xa4, 0x93, 0x85, 0xa2, 0x40, 0xe5, 0x85, 0x99, 0xa2,
                0x89, 0x96, 0x95, 0x40, 0x40, 0x7a, 0x11, 0x40, 0xd4, 0x1d, 0xe8, 0xf4, 0x4b, 0xf6, 0x4b, 0xf0,
                0x4b, 0xf1, 0xf0, 0xf9, 0xf4, 0xf1, 0x60, 0xe2, 0xc4, 0xd3, 0x60, 0x87, 0xf6, 0xf5, 0x83, 0xf9,
                0xf7, 0x86, 0x84, 0xf6, 0x11, 0xc1, 0x50, 0x1d, 0x60, 0xc8, 0x96, 0xa2, 0xa3, 0x40, 0x95, 0x81,
                0x94, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc1, 0xe4, 0x1d,
                0xe8, 0xc7, 0xc1, 0xe4, 0xc7, 0xc1, 0xd4, 0xc5, 0xd3, 0xc1, 0x11, 0xc2, 0x60, 0x1d, 0x60, 0xc8,
                0x96, 0xa2, 0xa3, 0x40, 0xd6, 0xe2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x7a, 0x11, 0xc2, 0xf4, 0x1d, 0xe8, 0xe6, 0x89, 0x95, 0x84, 0x96, 0xa6, 0xa2, 0x60, 0xf6,
                0x4b, 0xf2, 0x4b, 0xf9, 0xf2, 0xf0, 0xf0, 0x40, 0x40, 0xd7, 0x99, 0x96, 0x86, 0x85, 0xa2, 0xa2,
                0x89, 0x96, 0x95, 0x81, 0x93, 0x40, 0xf6, 0xf4, 0x60, 0x82, 0x89, 0xa3, 0x11, 0xc3, 0xf0, 0x1d,
                0x60, 0xc8, 0x96, 0xa2, 0xa3, 0x40, 0xc1, 0x99, 0x83, 0x88, 0x89, 0xa3, 0x85, 0x83, 0xa3, 0xa4,
                0x99, 0x85, 0x40, 0x7a, 0x11, 0xc4, 0xc4, 0x1d, 0xe8, 0xc9, 0x95, 0xa3, 0x85, 0x93, 0x4d, 0xd9,
                0x5d, 0x40, 0xa7, 0xf6, 0xf4, 0x11, 0xc5, 0x40, 0x1d, 0x60, 0xd7, 0x99, 0x96, 0x83, 0x85, 0xa2,
                0xa2, 0x96, 0x99, 0xa2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc5, 0xd4,
                0x1d, 0xe8, 0xd3, 0xd7, 0x7e, 0xf1, 0xf2, 0x6b, 0x40, 0xc3, 0x96, 0x99, 0x85, 0xa2, 0x7e, 0xf6,
                0x6b, 0x40, 0xc3, 0xd7, 0xe4, 0xa2, 0x7e, 0xf1, 0x11, 0xc6, 0x50, 0x1d, 0x60, 0xd3, 0xd7, 0xc1,
                0xd9, 0x40, 0xd5, 0x81, 0x94, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a,
                0x11, 0xc6, 0xe4, 0x1d, 0xe8, 0xc8, 0xc5, 0xd9, 0xc3, 0xe4, 0xd3, 0xc5, 0xe2, 0x11, 0xc7, 0x60,
                0x1d, 0x60, 0xc4, 0x85, 0xa5, 0x89, 0x83, 0x85, 0x40, 0x95, 0xa4, 0x94, 0x82, 0x85, 0x99, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc7, 0xf4, 0x1d, 0xe8, 0xf0, 0x7a, 0xf0, 0xf0, 0xc3, 0xf0,
                0x11, 0xc8, 0xf0, 0x1d, 0x60, 0xe2, 0xa4, 0x82, 0x83, 0x88, 0x81, 0x95, 0x95, 0x85, 0x93, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc9, 0xc4, 0x1d, 0xe8, 0xf0, 0xf0, 0xf1,
                0xc1, 0x11, 0xc8, 0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0x40, 0x40, 0x40,
                0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40,
                0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x11, 0x4a, 0x40, 0x1d,
                0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40,
                0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40,
                0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0x4b, 0x50,
                0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40,
                0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40,
                0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0x4c,
                0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2,
                0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11,
                0x4d, 0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf4, 0x93, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x6d, 0x6b, 0x6b, 0x6b, 0x60, 0x60, 0x60, 0x6b, 0x6b, 0x6d, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2,
                0xd2, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0x4f, 0x40, 0x1d, 0x60, 0x40, 0xe9, 0xe9, 0xe9, 0xa9, 0xa9,
                0x40, 0x61, 0x6b, 0x7d, 0x4b, 0x60, 0x7d, 0x79, 0x7d, 0x40, 0x40, 0x40, 0x40, 0x60, 0x4b, 0x40,
                0x40, 0x5e, 0x60, 0x5e, 0x5e, 0x6b, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x40,
                0x40, 0x40, 0x40, 0x11, 0x50, 0x50, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf4, 0x6b,
                0xf4, 0x60, 0x40, 0x40, 0x5d, 0x40, 0x5d, 0x60, 0x6b, 0x6d, 0x4b, 0x40, 0x6b, 0x4d, 0x40, 0x4d,
                0x40, 0x40, 0x7d, 0x7d, 0x60, 0x7d, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x11, 0xd1, 0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7d, 0x60,
                0x60, 0x60, 0x7d, 0x7d, 0x4d, 0x6d, 0x61, 0x60, 0x60, 0x7d, 0x40, 0x40, 0x79, 0x60, 0x7d, 0x5d,
                0x6d, 0x5d, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11,
                0xd2, 0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2,
                0xd2, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0xd4, 0x40, 0x1d, 0x60, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0x88, 0x85, 0x40, 0xd4, 0xe5, 0xe2, 0x40, 0xf3, 0x4b,
                0xf8, 0x91, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3,
                0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40,
                0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0xd5, 0x50, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3,
                0xa4, 0x99, 0x4d, 0x95, 0x5d, 0x92, 0x85, 0xa8, 0x40, 0xe2, 0xa8, 0xa2, 0xa3, 0x85, 0x94, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5,
                0x11, 0xd6, 0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2,
                0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0xf5,
                0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x11, 0xd7, 0xf0, 0x1d, 0x60, 0x11,
                0xd9, 0x40, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xd2, 0xf3, 0x40, 0x83, 0x99, 0x85, 0x81,
                0xa3, 0x85, 0x84, 0x40, 0x82, 0xa8, 0x40, 0x40, 0x40, 0xe5, 0x96, 0x93, 0x92, 0x85, 0x99, 0x40,
                0xc2, 0x81, 0x95, 0x84, 0x92, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xa5, 0x96, 0x93,
                0x92, 0x85, 0x99, 0x7c, 0x82, 0x81, 0x95, 0x84, 0x92, 0x85, 0x4b, 0x96, 0x99, 0x87, 0x11, 0x5a,
                0x50, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xd2, 0xf4, 0x60, 0x40, 0xa4, 0x97, 0x84, 0x81,
                0xa3, 0x85, 0x40, 0x82, 0xa8, 0x40, 0x40, 0x40, 0xd1, 0xa4, 0x85, 0x99, 0x87, 0x85, 0x95, 0x40,
                0xe6, 0x89, 0x95, 0x92, 0x85, 0x93, 0x94, 0x81, 0x95, 0x95, 0x40, 0x40, 0x91, 0xa4, 0x85, 0x99,
                0x87, 0x85, 0x95, 0x4b, 0xa6, 0x89, 0x95, 0x92, 0x85, 0x93, 0x94, 0x81, 0x95, 0x95, 0x7c, 0x97,
                0x85, 0x82, 0x82, 0x93, 0x85, 0x60, 0x82, 0x85, 0x81, 0x83, 0x88, 0x4b, 0x83, 0x88, 0x11, 0x5b,
                0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xd2, 0xf5, 0x40, 0x40, 0xa4, 0x97, 0x84, 0x81,
                0xa3, 0x85, 0x40, 0x82, 0xa8, 0x40, 0x40, 0x40, 0xd9, 0x96, 0x82, 0x40, 0xd7, 0x99, 0x89, 0x95,
                0xa2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x97, 0x99, 0x89, 0x95,
                0xf0, 0xf0, 0xf9, 0xf6, 0x7c, 0x87, 0x94, 0x81, 0x89, 0x93, 0x4b, 0x83, 0x96, 0x94, 0x11, 0x5c,
                0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xa2, 0x85, 0x85, 0x40,
                0xe2, 0xe8, 0xe2, 0xf2, 0x4b, 0xd1, 0xc3, 0xd3, 0xd3, 0xc9, 0xc2, 0x4d, 0xc3, 0xd9, 0xc5, 0xc4,
                0xc9, 0xe3, 0xe2, 0x5d, 0x40, 0x86, 0x96, 0x99, 0x40, 0x83, 0x96, 0x94, 0x97, 0x93, 0x85, 0xa3,
                0x85, 0x40, 0x83, 0x99, 0x85, 0x84, 0x89, 0xa3, 0xa2, 0xff, 0xef };

            _service.CommandReady = true;
            var rowXml = new string[24];

            for (var i = 0; i < _service.Handlers.Length; i++)
            {
                var handler = _service.Handlers[i];
                var i1 = i;
                handler.RowUpdated += (sender, args) =>
                {
                    rowXml[i1] = args.Data.ToString();
                };
            }

            Assert.AreEqual((1503, 1895), _service.ProcessOutbound(data, 0, 0));
            foreach (var rowHandler in _service.Handlers)
            {
                rowHandler.Update();
            }

            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"19\">Hercules Version  :</label>\r\n  <label col=\"21\" length=\"25\">4.6.0.10941-SDL-g65c97fd6</label>\r\n</row>", rowXml[0]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"19\">Host name         :</label>\r\n  <label col=\"21\" length=\"9\">GAUGAMELA</label>\r\n</row>", rowXml[1]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"19\">Host OS           :</label>\r\n  <label col=\"21\" length=\"37\">Windows-6.2.9200  Professional 64-bit</label>\r\n</row>", rowXml[2]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"19\">Host Architecture :</label>\r\n  <label col=\"21\" length=\"12\">Intel(R) x64</label>\r\n</row>", rowXml[3]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"19\">Processors        :</label>\r\n  <label col=\"21\" length=\"22\">LP=12, Cores=6, CPUs=1</label>\r\n</row>", rowXml[4]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"19\">LPAR Name         :</label>\r\n  <label col=\"21\" length=\"8\">HERCULES</label>\r\n</row>", rowXml[5]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"19\">Device number     :</label>\r\n  <label col=\"21\" length=\"6\">0:00C0</label>\r\n</row>", rowXml[6]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"20\">                    </label>\r\n  <label col=\"21\" length=\"50\">       TTTTTTTTTTTT   KKKK  KKKKK     555555555555</label>\r\n</row>", rowXml[7]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"60\">                           TT   TT   TT    KK    KK       55</label>\r\n</row>", rowXml[8]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"60\">                           TT   TT   TT    KK   KK        55</label>\r\n</row>", rowXml[9]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"60\">                                TT         KK  KK         55</label>\r\n</row>", rowXml[10]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"65\">        4l      _,,,---,,_      TT         KK KK          55     </label>\r\n</row>", rowXml[11]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"73\"> ZZZzz /,'.-'`'    -.  ;-;;,    TT         KKKK           55555555555    </label>\r\n</row>", rowXml[12]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"76\">      4,4-  ) )-,_. ,( (  ''-'  TT         KKKKK                    55      </label>\r\n</row>", rowXml[13]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"70\">     '---''(_/--'  `-')_)       TT         KK  KK                   55</label>\r\n</row>", rowXml[14]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"70\">                                TT         KK   KK                  55</label>\r\n</row>", rowXml[15]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"70\">       The MVS 3.8j             TT         KK    KK                 55</label>\r\n</row>", rowXml[16]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"70\">     Tur(n)key System           TT         KK     KK                55</label>\r\n</row>", rowXml[17]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"69\">                              TTTTTT      KKKK     KKK    55555555555</label>\r\n</row>", rowXml[18]);
            Assert.AreEqual("<row />", rowXml[19]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"58\">    TK3 created by   Volker Bandke       volker@bandke.org</label>\r\n</row>", rowXml[20]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"75\">    TK4- update by   Juergen Winkelmann  juergen.winkelmann@pebble-beach.ch</label>\r\n</row>", rowXml[21]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"59\">    TK5  update by   Rob Prins           prin0096@gmail.com</label>\r\n</row>", rowXml[22]);
            Assert.AreEqual("<row />", rowXml[23]);
        }

        [Test]
        public void Outbound_2Responses_1UnProtected()
        {
            var data = new byte[]
            {
                0xf5, 0x42, 0x11, 0x40,
                0x40, 0x1d, 0x60, 0xc8, 0x85, 0x99, 0x83, 0xa4, 0x93, 0x85, 0xa2, 0x40, 0xe5, 0x85, 0x99, 0xa2,
                0x89, 0x96, 0x95, 0x40, 0x40, 0x7a, 0x11, 0x40, 0xd4, 0x1d, 0xe8, 0xf4, 0x4b, 0xf6, 0x4b, 0xf0,
                0x4b, 0xf1, 0xf0, 0xf9, 0xf4, 0xf1, 0x60, 0xe2, 0xc4, 0xd3, 0x60, 0x87, 0xf6, 0xf5, 0x83, 0xf9,
                0xf7, 0x86, 0x84, 0xf6, 0x11, 0xc1, 0x50, 0x1d, 0x60, 0xc8, 0x96, 0xa2, 0xa3, 0x40, 0x95, 0x81,
                0x94, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc1, 0xe4, 0x1d,
                0xe8, 0xc7, 0xc1, 0xe4, 0xc7, 0xc1, 0xd4, 0xc5, 0xd3, 0xc1, 0x11, 0xc2, 0x60, 0x1d, 0x60, 0xc8,
                0x96, 0xa2, 0xa3, 0x40, 0xd6, 0xe2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x7a, 0x11, 0xc2, 0xf4, 0x1d, 0xe8, 0xe6, 0x89, 0x95, 0x84, 0x96, 0xa6, 0xa2, 0x60, 0xf6,
                0x4b, 0xf2, 0x4b, 0xf9, 0xf2, 0xf0, 0xf0, 0x40, 0x40, 0xd7, 0x99, 0x96, 0x86, 0x85, 0xa2, 0xa2,
                0x89, 0x96, 0x95, 0x81, 0x93, 0x40, 0xf6, 0xf4, 0x60, 0x82, 0x89, 0xa3, 0x11, 0xc3, 0xf0, 0x1d,
                0x60, 0xc8, 0x96, 0xa2, 0xa3, 0x40, 0xc1, 0x99, 0x83, 0x88, 0x89, 0xa3, 0x85, 0x83, 0xa3, 0xa4,
                0x99, 0x85, 0x40, 0x7a, 0x11, 0xc4, 0xc4, 0x1d, 0xe8, 0xc9, 0x95, 0xa3, 0x85, 0x93, 0x4d, 0xd9,
                0x5d, 0x40, 0xa7, 0xf6, 0xf4, 0x11, 0xc5, 0x40, 0x1d, 0x60, 0xd7, 0x99, 0x96, 0x83, 0x85, 0xa2,
                0xa2, 0x96, 0x99, 0xa2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc5, 0xd4,
                0x1d, 0xe8, 0xd3, 0xd7, 0x7e, 0xf1, 0xf2, 0x6b, 0x40, 0xc3, 0x96, 0x99, 0x85, 0xa2, 0x7e, 0xf6,
                0x6b, 0x40, 0xc3, 0xd7, 0xe4, 0xa2, 0x7e, 0xf1, 0x11, 0xc6, 0x50, 0x1d, 0x60, 0xd3, 0xd7, 0xc1,
                0xd9, 0x40, 0xd5, 0x81, 0x94, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a,
                0x11, 0xc6, 0xe4, 0x1d, 0xe8, 0xc8, 0xc5, 0xd9, 0xc3, 0xe4, 0xd3, 0xc5, 0xe2, 0x11, 0xc7, 0x60,
                0x1d, 0x60, 0xc4, 0x85, 0xa5, 0x89, 0x83, 0x85, 0x40, 0x95, 0xa4, 0x94, 0x82, 0x85, 0x99, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc7, 0xf4, 0x1d, 0xe8, 0xf0, 0x7a, 0xf0, 0xf0, 0xc3, 0xf0,
                0x11, 0xc8, 0xf0, 0x1d, 0x60, 0xe2, 0xa4, 0x82, 0x83, 0x88, 0x81, 0x95, 0x95, 0x85, 0x93, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7a, 0x11, 0xc9, 0xc4, 0x1d, 0xe8, 0xf0, 0xf0, 0xf1,
                0xc1, 0x11, 0xc8, 0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0x40, 0x40, 0x40,
                0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40,
                0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x11, 0x4a, 0x40, 0x1d,
                0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40,
                0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40,
                0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0x4b, 0x50,
                0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40,
                0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40,
                0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0x4c,
                0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2,
                0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11,
                0x4d, 0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf4, 0x93, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x6d, 0x6b, 0x6b, 0x6b, 0x60, 0x60, 0x60, 0x6b, 0x6b, 0x6d, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2,
                0xd2, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x11, 0x4f, 0x40, 0x1d, 0x60, 0x40, 0xe9, 0xe9, 0xe9, 0xa9, 0xa9,
                0x40, 0x61, 0x6b, 0x7d, 0x4b, 0x60, 0x7d, 0x79, 0x7d, 0x40, 0x40, 0x40, 0x40, 0x60, 0x4b, 0x40,
                0x40, 0x5e, 0x60, 0x5e, 0x5e, 0x6b, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x40,
                0x40, 0x40, 0x40, 0x11, 0x50, 0x50, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf4, 0x6b,
                0xf4, 0x60, 0x40, 0x40, 0x5d, 0x40, 0x5d, 0x60, 0x6b, 0x6d, 0x4b, 0x40, 0x6b, 0x4d, 0x40, 0x4d,
                0x40, 0x40, 0x7d, 0x7d, 0x60, 0x7d, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x11, 0xd1, 0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7d, 0x60,
                0x60, 0x60, 0x7d, 0x7d, 0x4d, 0x6d, 0x61, 0x60, 0x60, 0x7d, 0x40, 0x40, 0x79, 0x60, 0x7d, 0x5d,
                0x6d, 0x5d, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11,
                0xd2, 0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2,
                0xd2, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0xd4, 0x40, 0x1d, 0x60, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0x88, 0x85, 0x40, 0xd4, 0xe5, 0xe2, 0x40, 0xf3, 0x4b,
                0xf8, 0x91, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3,
                0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40,
                0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xf5, 0xf5, 0x11, 0xd5, 0x50, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3,
                0xa4, 0x99, 0x4d, 0x95, 0x5d, 0x92, 0x85, 0xa8, 0x40, 0xe2, 0xa8, 0xa2, 0xa3, 0x85, 0x94, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xf5, 0xf5,
                0x11, 0xd6, 0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2,
                0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0x40, 0xd2, 0xd2, 0xd2, 0x40, 0x40, 0x40, 0x40, 0xf5,
                0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x11, 0xd7, 0xf0, 0x1d, 0x60, 0x11,
                0xd9, 0x40, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xd2, 0xf3, 0x40, 0x83, 0x99, 0x85, 0x81,
                0xa3, 0x85, 0x84, 0x40, 0x82, 0xa8, 0x40, 0x40, 0x40, 0xe5, 0x96, 0x93, 0x92, 0x85, 0x99, 0x40,
                0xc2, 0x81, 0x95, 0x84, 0x92, 0x85, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xa5, 0x96, 0x93,
                0x92, 0x85, 0x99, 0x7c, 0x82, 0x81, 0x95, 0x84, 0x92, 0x85, 0x4b, 0x96, 0x99, 0x87, 0x11, 0x5a,
                0x50, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xd2, 0xf4, 0x60, 0x40, 0xa4, 0x97, 0x84, 0x81,
                0xa3, 0x85, 0x40, 0x82, 0xa8, 0x40, 0x40, 0x40, 0xd1, 0xa4, 0x85, 0x99, 0x87, 0x85, 0x95, 0x40,
                0xe6, 0x89, 0x95, 0x92, 0x85, 0x93, 0x94, 0x81, 0x95, 0x95, 0x40, 0x40, 0x91, 0xa4, 0x85, 0x99,
                0x87, 0x85, 0x95, 0x4b, 0xa6, 0x89, 0x95, 0x92, 0x85, 0x93, 0x94, 0x81, 0x95, 0x95, 0x7c, 0x97,
                0x85, 0x82, 0x82, 0x93, 0x85, 0x60, 0x82, 0x85, 0x81, 0x83, 0x88, 0x4b, 0x83, 0x88, 0x11, 0x5b,
                0x60, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0xe3, 0xd2, 0xf5, 0x40, 0x40, 0xa4, 0x97, 0x84, 0x81,
                0xa3, 0x85, 0x40, 0x82, 0xa8, 0x40, 0x40, 0x40, 0xd9, 0x96, 0x82, 0x40, 0xd7, 0x99, 0x89, 0x95,
                0xa2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x97, 0x99, 0x89, 0x95,
                0xf0, 0xf0, 0xf9, 0xf6, 0x7c, 0x87, 0x94, 0x81, 0x89, 0x93, 0x4b, 0x83, 0x96, 0x94, 0x11, 0x5c,
                0xf0, 0x1d, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xa2, 0x85, 0x85, 0x40,
                0xe2, 0xe8, 0xe2, 0xf2, 0x4b, 0xd1, 0xc3, 0xd3, 0xd3, 0xc9, 0xc2, 0x4d, 0xc3, 0xd9, 0xc5, 0xc4,
                0xc9, 0xe3, 0xe2, 0x5d, 0x40, 0x86, 0x96, 0x99, 0x40, 0x83, 0x96, 0x94, 0x97, 0x93, 0x85, 0xa3,
                0x85, 0x40, 0x83, 0x99, 0x85, 0x84, 0x89, 0xa3, 0xa2, 0xff, 0xef, 0xf5, 0xc3, 0x11, 0x40,
                0x40, 0xe3, 0x85, 0x99, 0x94, 0x89, 0x95, 0x81, 0x93, 0x11, 0x40, 0xc8, 0x1d, 0xf8, 0x11, 0x40,
                0x4a, 0x1d, 0xf8, 0xc3, 0xe4, 0xe4, 0xf0, 0xc3, 0xf0, 0x40, 0x40, 0x11, 0x40, 0xd3, 0x1d, 0xf8,
                0x11, 0xc1, 0xc1, 0x1d, 0xf8, 0xc4, 0x81, 0xa3, 0x85, 0x11, 0xc1, 0xc6, 0x1d, 0xf8, 0x11, 0xc1,
                0xc7, 0x1d, 0xf8, 0xf0, 0xf8, 0x4b, 0xf0, 0xf2, 0x4b, 0xf2, 0xf4, 0x11, 0xc1, 0x50, 0x1d, 0xf8,
                0x11, 0xc2, 0xd1, 0x1d, 0xf8, 0xe3, 0x89, 0x94, 0x85, 0x11, 0xc2, 0xd6, 0x1d, 0xf8, 0x11, 0xc2,
                0xd7, 0x1d, 0xf8, 0xf2, 0xf3, 0x7a, 0xf5, 0xf8, 0x7a, 0xf0, 0xf9, 0x11, 0xc2, 0x60, 0x1d, 0xf0,
                0x11, 0xc4, 0x4a, 0x1d, 0xf0, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3,
                0xe3, 0x11, 0xc4, 0xd7, 0x1d, 0xf0, 0x11, 0xc4, 0xd9, 0x1d, 0xf0, 0xd2, 0xd2, 0xd2, 0xd2, 0x11,
                0xc4, 0x5e, 0x1d, 0xf0, 0x11, 0xc4, 0x5f, 0x1d, 0xf0, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0x11, 0xc4,
                0xe5, 0x1d, 0xf0, 0x11, 0xc4, 0xe8, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5,
                0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0xc4, 0xf5, 0x1d, 0xf0, 0x11,
                0xc5, 0x5a, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0xc5, 0x5d, 0x1d, 0xf0, 0x11, 0xc5, 0x5f, 0x1d, 0xf0,
                0xe3, 0xe3, 0x11, 0xc5, 0xe2, 0x1d, 0xf0, 0x11, 0xc5, 0xe4, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0xc5,
                0xe7, 0x1d, 0xf0, 0x11, 0xc5, 0x6a, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0xc5, 0x6d, 0x1d, 0xf0, 0x11,
                0xc5, 0xf0, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0xc5, 0xf3, 0x1d, 0xf0, 0x11, 0xc5, 0xf8, 0x1d, 0xf0,
                0x28, 0x42, 0xf4, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0xc6, 0xc1, 0x1d, 0xf0, 0x11, 0xc6, 0x6a,
                0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0xc6, 0x6d, 0x1d, 0xf0, 0x11, 0xc6, 0x6f, 0x1d, 0xf0, 0xe3, 0xe3,
                0x11, 0xc6, 0xf2, 0x1d, 0xf0, 0x11, 0xc6, 0xf4, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0xc6, 0xf7, 0x1d,
                0xf0, 0x11, 0xc6, 0x7a, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0xc6, 0x7d, 0x1d, 0xf0, 0x11, 0xc6, 0x7f,
                0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0xc7, 0xc2, 0x1d, 0xf0, 0x11, 0xc7, 0xc8, 0x1d, 0xf0, 0x28, 0x42,
                0xf4, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0xc7, 0xd1, 0x1d, 0xf0, 0x11, 0xc7, 0x7f, 0x1d, 0xf0,
                0xe3, 0xe3, 0x11, 0xc8, 0xc2, 0x1d, 0xf0, 0x11, 0xc8, 0x4a, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0xc8,
                0x4d, 0x1d, 0xf0, 0x11, 0xc8, 0x4e, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0xc8, 0xd1, 0x1d, 0xf0, 0x11,
                0xc8, 0xd8, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0xc8, 0xf7, 0x1d,
                0xf8, 0x4f, 0x93, 0x11, 0xc8, 0x7a, 0x1d, 0xf8, 0x11, 0xc8, 0x7f, 0x1d, 0xf8, 0x6d, 0x6b, 0x6b,
                0x6b, 0x60, 0x60, 0x60, 0x6b, 0x6b, 0x6d, 0x11, 0xc9, 0x4a, 0x1d, 0xf8, 0x11, 0xc9, 0x4f, 0x1d,
                0xf0, 0xe3, 0xe3, 0x11, 0xc9, 0xd2, 0x1d, 0xf0, 0x11, 0xc9, 0x5a, 0x1d, 0xf0, 0xd2, 0xd2, 0x40,
                0xd2, 0xd2, 0x11, 0xc9, 0x60, 0x1d, 0xf0, 0x11, 0xc9, 0xe8, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5,
                0xf5, 0x28, 0x42, 0x00, 0x11, 0xc9, 0x6b, 0x1d, 0xf0, 0x11, 0x4a, 0x40, 0x1d, 0xf8, 0xe9, 0xe9,
                0xe9, 0xa9, 0xa9, 0x40, 0x61, 0x6b, 0x7d, 0x4b, 0x60, 0x7d, 0x79, 0x7d, 0x40, 0x40, 0x40, 0x40,
                0x60, 0x4b, 0x40, 0x40, 0x5e, 0x60, 0x5e, 0x5e, 0x6b, 0x11, 0x4a, 0x5c, 0x1d, 0xf8, 0x11, 0x4a,
                0x5f, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0x4a, 0xe2, 0x1d, 0xf0, 0x11, 0x4a, 0x6a, 0x1d, 0xf0, 0xd2,
                0xd2, 0xd2, 0xd2, 0x11, 0x4a, 0x6f, 0x1d, 0xf0, 0x11, 0x4a, 0xf8, 0x1d, 0xf0, 0x28, 0x42, 0xf4,
                0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0x4b,
                0xc4, 0x1d, 0xf0, 0x11, 0x4b, 0xd5, 0x1d, 0xf8, 0x4f, 0x6b, 0xf4, 0x60, 0x40, 0x40, 0x5d, 0x40,
                0x5d, 0x60, 0x6b, 0x6d, 0x4b, 0x40, 0x6b, 0x4d, 0x40, 0x4d, 0x40, 0x40, 0x7d, 0x7d, 0x60, 0x7d,
                0x11, 0x4b, 0x6e, 0x1d, 0xf8, 0x11, 0x4b, 0x6f, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0x4b, 0xf2, 0x1d,
                0xf0, 0x11, 0x4b, 0x7a, 0x1d, 0xf0, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0x11, 0x4c, 0x40, 0x1d, 0xf0,
                0x11, 0x4c, 0xd2, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0x4c, 0xd5,
                0x1d, 0xf0, 0x11, 0x4c, 0xe4, 0x1d, 0xf8, 0x7d, 0x60, 0x60, 0x60, 0x7d, 0x7d, 0x4d, 0x6d, 0x61,
                0x60, 0x60, 0x7d, 0x40, 0x40, 0x79, 0x60, 0x7d, 0x5d, 0x6d, 0x5d, 0x11, 0x4c, 0xf9, 0x1d, 0xf8,
                0x11, 0x4c, 0x7f, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0x4d, 0xc2, 0x1d, 0xf0, 0x11, 0x4d, 0x4a, 0x1d,
                0xf0, 0xd2, 0xd2, 0x11, 0x4d, 0x4d, 0x1d, 0xf0, 0x11, 0x4d, 0x4e, 0x1d, 0xf0, 0xd2, 0xd2, 0x11,
                0x4d, 0xd1, 0x1d, 0xf0, 0x11, 0x4d, 0xe2, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5, 0xf5, 0x28, 0x42,
                0x00, 0x11, 0x4d, 0xe5, 0x1d, 0xf0, 0x11, 0x4e, 0x4f, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0x4e, 0xd2,
                0x1d, 0xf0, 0x11, 0x4e, 0x5a, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0x4e, 0x5d, 0x1d, 0xf0, 0x11, 0x4e,
                0x5f, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0x4e, 0xe2, 0x1d, 0xf0, 0x11, 0x4e, 0xf2, 0x1d, 0xf0, 0x28,
                0x42, 0xf4, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0x4e, 0xf5, 0x1d, 0xf0, 0x11, 0x4f, 0xc6, 0x1d,
                0xf8, 0xe3, 0x88, 0x85, 0x40, 0xd4, 0xe5, 0xe2, 0x40, 0xf3, 0x4b, 0xf8, 0x91, 0x11, 0x4f, 0xd3,
                0x1d, 0xf8, 0x11, 0x4f, 0x5f, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0x4f, 0xe2, 0x1d, 0xf0, 0x11, 0x4f,
                0x6a, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0x4f, 0x6d, 0x1d, 0xf0, 0x11, 0x4f, 0xf0, 0x1d, 0xf0, 0xd2,
                0xd2, 0x11, 0x4f, 0xf3, 0x1d, 0xf0, 0x11, 0x50, 0xc2, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5, 0xf5,
                0x28, 0x42, 0x00, 0x11, 0x50, 0xc5, 0x1d, 0xf0, 0x11, 0x50, 0xd4, 0x1d, 0xf8, 0xe3, 0xa4, 0x99,
                0x4d, 0x95, 0x5d, 0x92, 0x85, 0xa8, 0x40, 0xe2, 0xa8, 0xa2, 0xa3, 0x85, 0x94, 0x11, 0x50, 0xe5,
                0x1d, 0xf8, 0x11, 0x50, 0x6f, 0x1d, 0xf0, 0xe3, 0xe3, 0x11, 0x50, 0xf2, 0x1d, 0xf0, 0x11, 0x50,
                0x7a, 0x1d, 0xf0, 0xd2, 0xd2, 0x11, 0x50, 0x7d, 0x1d, 0xf0, 0x11, 0xd1, 0xc1, 0x1d, 0xf0, 0xd2,
                0xd2, 0x11, 0xd1, 0xc4, 0x1d, 0xf0, 0x11, 0xd1, 0xd2, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5, 0xf5,
                0x28, 0x42, 0x00, 0x11, 0xd1, 0xd5, 0x1d, 0xf0, 0x11, 0xd1, 0x7d, 0x1d, 0xf0, 0xe3, 0xe3, 0xe3,
                0xe3, 0xe3, 0xe3, 0x11, 0xd2, 0xc4, 0x1d, 0xf0, 0x11, 0xd2, 0xc9, 0x1d, 0xf0, 0xd2, 0xd2, 0xd2,
                0xd2, 0x11, 0xd2, 0x4e, 0x1d, 0xf0, 0x11, 0xd2, 0xd2, 0x1d, 0xf0, 0xd2, 0xd2, 0xd2, 0x11, 0xd2,
                0xd6, 0x1d, 0xf0, 0x11, 0xd2, 0xd8, 0x1d, 0xf0, 0x28, 0x42, 0xf4, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5,
                0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x28, 0x42, 0x00, 0x11, 0xd2, 0xe4, 0x1d, 0xf0, 0x11, 0xd4,
                0xc5, 0x1d, 0xf0, 0xe3, 0xd2, 0xf3, 0x40, 0x40, 0x83, 0x99, 0x85, 0x81, 0xa3, 0x85, 0x84, 0x40,
                0x82, 0xa8, 0x40, 0xe5, 0x96, 0x93, 0x92, 0x85, 0x99, 0x40, 0xc2, 0x81, 0x95, 0x84, 0x92, 0x85,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xa5, 0x96, 0x93, 0x92, 0x85, 0x99, 0x7c, 0x82, 0x81, 0x95,
                0x84, 0x92, 0x85, 0x4b, 0x96, 0x99, 0x87, 0x11, 0xd5, 0x40, 0x1d, 0xf0, 0x11, 0xd5, 0xd5, 0x1d,
                0xf0, 0xe3, 0xd2, 0xf4, 0x60, 0x40, 0xa4, 0x97, 0x84, 0x81, 0xa3, 0x85, 0x40, 0x82, 0xa8, 0x40,
                0xd1, 0xa4, 0x85, 0x99, 0x87, 0x85, 0x95, 0x40, 0xe6, 0x89, 0x95, 0x92, 0x85, 0x93, 0x94, 0x81,
                0x95, 0x95, 0x40, 0x40, 0x91, 0xa4, 0x85, 0x99, 0x87, 0x85, 0x95, 0x4b, 0xa6, 0x89, 0x95, 0x92,
                0x85, 0x93, 0x94, 0x81, 0x95, 0x95, 0x7c, 0x97, 0x85, 0x82, 0x82, 0x93, 0x85, 0x60, 0x82, 0x85,
                0x81, 0x83, 0x88, 0x4b, 0x83, 0x88, 0x11, 0xd6, 0x5b, 0x1d, 0xf0, 0x11, 0xd6, 0xe5, 0x1d, 0xf0,
                0xe3, 0xd2, 0xf5, 0x40, 0x40, 0xa4, 0x97, 0x84, 0x81, 0xa3, 0x85, 0x40, 0x82, 0xa8, 0x40, 0xd9,
                0x96, 0x82, 0x40, 0xd7, 0x99, 0x89, 0x95, 0xa2, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x97, 0x99, 0x89, 0x95, 0xf0, 0xf0, 0xf9, 0xf6, 0x7c, 0x87, 0x94, 0x81, 0x89,
                0x93, 0x4b, 0x83, 0x96, 0x94, 0x11, 0xd7, 0x5b, 0x1d, 0xf0, 0x11, 0xd7, 0x7a, 0x1d, 0xf0, 0xa2,
                0x85, 0x85, 0x40, 0xe2, 0xe8, 0xe2, 0xf2, 0x4b, 0xd1, 0xc3, 0xd3, 0xd3, 0xc9, 0xc2, 0x4d, 0xc3,
                0xd9, 0xc5, 0xc4, 0xc9, 0xe3, 0xe2, 0x5d, 0x40, 0x86, 0x96, 0x99, 0x40, 0x83, 0x96, 0x94, 0x97,
                0x93, 0x85, 0xa3, 0x85, 0x40, 0x83, 0x99, 0x85, 0x84, 0x89, 0xa3, 0xa2, 0x11, 0xd8, 0xe8, 0x1d,
                0xf0, 0x11, 0xd9, 0xd7, 0x1d, 0xf0, 0xd4, 0xe5, 0xe2, 0x40, 0xf3, 0x4b, 0xf8, 0x91, 0x40, 0xd3,
                0x85, 0xa5, 0x85, 0x93, 0x40, 0xf8, 0xf5, 0xf0, 0xf5, 0x11, 0xd9, 0x6b, 0x1d, 0xf0, 0x11, 0x5b,
                0x5f, 0x1d, 0xf8, 0xd3, 0x96, 0x87, 0x96, 0x95, 0x40, 0x7e, 0x7e, 0x7e, 0x6e, 0x11, 0x5b, 0x6a,
                0x1d, 0xc8, 0x13, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
                0x40, 0x40, 0x40, 0x11, 0x5d, 0x6b, 0x1d, 0xf8, 0xd9, 0xe4, 0xd5, 0xd5, 0xc9, 0xd5, 0xc7, 0x40,
                0x40, 0xe3, 0xd2, 0xf5, 0x11, 0x5d, 0x7b, 0x1d, 0xf8, 0x11, 0x5d, 0x7f, 0x1d, 0xf8, 0xff, 0xef
            };

            _service.CommandReady = true;
            var rowXml = new string[24];

            for (var i = 0; i < _service.Handlers.Length; i++)
            {
                var handler = _service.Handlers[i];
                var i1 = i;
                handler.RowUpdated += (sender, args) =>
                {
                    rowXml[i1] = args.Data.ToString();
                };
            }

            Assert.AreEqual((2963, 1920), _service.ProcessOutbound(data, 0, 0));
            foreach (var rowHandler in _service.Handlers)
            {
                rowHandler.Update();
            }

            Assert.AreEqual("<row>\r\n  <label col=\"11\" length=\"16\">TerminalCUU0C0  </label>\r\n  <label col=\"66\" length=\"4\">Date</label>\r\n  <label col=\"72\" length=\"8\" />\r\n</row>", rowXml[0]);
            Assert.AreEqual("<row>\r\n  <label col=\"66\" length=\"4\">Time</label>\r\n  <label col=\"72\" length=\"8\" />\r\n</row>", rowXml[1]);
            Assert.AreEqual("<row />", rowXml[2]);
            Assert.AreEqual("<row>\r\n  <label col=\"27\" length=\"12\">TTTTTTTTTTTT</label>\r\n  <label col=\"42\" length=\"4\">KKKK</label>\r\n  <label col=\"48\" length=\"5\">KKKKK</label>\r\n  <label col=\"57\" length=\"12\">555555555555</label>\r\n</row>", rowXml[3]);
            Assert.AreEqual("<row>\r\n  <label col=\"27\" length=\"2\">TT</label>\r\n  <label col=\"32\" length=\"2\">TT</label>\r\n  <label col=\"37\" length=\"2\">TT</label>\r\n  <label col=\"43\" length=\"2\">KK</label>\r\n  <label col=\"49\" length=\"2\">KK</label>\r\n  <label col=\"57\" length=\"2\">55</label>\r\n</row>", rowXml[4]);
            Assert.AreEqual("<row>\r\n  <label col=\"27\" length=\"2\">TT</label>\r\n  <label col=\"32\" length=\"2\">TT</label>\r\n  <label col=\"37\" length=\"2\">TT</label>\r\n  <label col=\"43\" length=\"2\">KK</label>\r\n  <label col=\"48\" length=\"2\">KK</label>\r\n  <label col=\"57\" length=\"2\">55</label>\r\n</row>", rowXml[5]);
            Assert.AreEqual("<row>\r\n  <label col=\"32\" length=\"2\">TT</label>\r\n  <label col=\"43\" length=\"2\">KK</label>\r\n  <label col=\"47\" length=\"2\">KK</label>\r\n  <label col=\"57\" length=\"2\">55</label>\r\n</row>", rowXml[6]);
            Assert.AreEqual("<row>\r\n  <label col=\"8\" length=\"2\">!l</label>\r\n  <label col=\"16\" length=\"10\">_,,,---,,_</label>\r\n  <label col=\"32\" length=\"2\">TT</label>\r\n  <label col=\"43\" length=\"5\">KK KK</label>\r\n  <label col=\"57\" length=\"2\">55</label>\r\n</row>", rowXml[7]);
            Assert.AreEqual("<row>\r\n  <label col=\"1\" length=\"27\">ZZZzz /,'.-'`'    -.  ;-;;,</label>\r\n  <label col=\"32\" length=\"2\">TT</label>\r\n  <label col=\"43\" length=\"4\">KKKK</label>\r\n  <label col=\"57\" length=\"11\">55555555555</label>\r\n</row>", rowXml[8]);
            Assert.AreEqual("<row>\r\n  <label col=\"6\" length=\"24\">!,4-  ) )-,_. ,( (  ''-'</label>\r\n  <label col=\"32\" length=\"2\">TT</label>\r\n  <label col=\"43\" length=\"5\">KKKKK</label>\r\n  <label col=\"67\" length=\"2\">55</label>\r\n</row>", rowXml[9]);
            Assert.AreEqual("<row>\r\n  <label col=\"5\" length=\"20\">'---''(_/--'  `-')_)</label>\r\n  <label col=\"32\" length=\"2\">TT</label>\r\n  <label col=\"43\" length=\"2\">KK</label>\r\n  <label col=\"47\" length=\"2\">KK</label>\r\n  <label col=\"67\" length=\"2\">55</label>\r\n</row>", rowXml[10]);
            Assert.AreEqual("<row>\r\n  <label col=\"32\" length=\"2\">TT</label>\r\n  <label col=\"43\" length=\"2\">KK</label>\r\n  <label col=\"48\" length=\"2\">KK</label>\r\n  <label col=\"67\" length=\"2\">55</label>\r\n</row>", rowXml[11]);
            Assert.AreEqual("<row>\r\n  <label col=\"7\" length=\"12\">The MVS 3.8j</label>\r\n  <label col=\"32\" length=\"2\">TT</label>\r\n  <label col=\"43\" length=\"2\">KK</label>\r\n  <label col=\"49\" length=\"2\">KK</label>\r\n  <label col=\"67\" length=\"2\">55</label>\r\n</row>", rowXml[12]);
            Assert.AreEqual("<row>\r\n  <label col=\"5\" length=\"16\">Tur(n)key System</label>\r\n  <label col=\"32\" length=\"2\">TT</label>\r\n  <label col=\"43\" length=\"2\">KK</label>\r\n  <label col=\"50\" length=\"2\">KK</label>\r\n  <label col=\"67\" length=\"2\">55</label>\r\n</row>", rowXml[13]);
            Assert.AreEqual("<row>\r\n  <label col=\"30\" length=\"6\">TTTTTT</label>\r\n  <label col=\"42\" length=\"4\">KKKK</label>\r\n  <label col=\"51\" length=\"3\">KKK</label>\r\n  <label col=\"57\" length=\"11\">55555555555</label>\r\n</row>", rowXml[14]);
            Assert.AreEqual("<row />", rowXml[15]);
            Assert.AreEqual("<row>\r\n  <label col=\"6\" length=\"52\">TK3  created by Volker Bandke      volker@bandke.org</label>\r\n</row>", rowXml[16]);
            Assert.AreEqual("<row>\r\n  <label col=\"6\" length=\"69\">TK4- update by Juergen Winkelmann  juergen.winkelmann@pebble-beach.ch</label>\r\n</row>", rowXml[17]);
            Assert.AreEqual("<row>\r\n  <label col=\"6\" length=\"53\">TK5  update by Rob Prins           prin0096@gmail.com</label>\r\n</row>", rowXml[18]);
            Assert.AreEqual("<row>\r\n  <label col=\"11\" length=\"45\">see SYS2.JCLLIB(CREDITS) for complete credits</label>\r\n</row>", rowXml[19]);
            Assert.AreEqual("<row>\r\n  <label col=\"24\" length=\"19\">MVS 3.8j Level 8505</label>\r\n</row>", rowXml[20]);
            Assert.AreEqual("<row />", rowXml[21]);
            Assert.AreEqual("<row>\r\n  <label col=\"0\" length=\"10\">Logon ===&gt;</label>\r\n  <input col=\"11\" cursor=\"true\" length=\"69\" />\r\n</row>", rowXml[22]);
            Assert.AreEqual("<row>\r\n  <label col=\"60\" length=\"12\">RUNNING  TK5</label>\r\n</row>", rowXml[23]);
        }

        [Test]
        public void StartField()
        {
            var data = new byte[] { 0x1d, 0x60, 0xc8, 0x96, 0xa2, 0xa3 };
            Assert.AreEqual((2, 341), _service.OrderStartField(data, 0, 340));
            Assert.AreSame(_service.Handlers[4], _service.CurrentRow);
            Assert.AreEqual(21, _service.CurrentRow?.CurrentCol);
        }

        [Test]
        public void SetBufferAddress()
        {
            var data = new byte[] { 0x11, 0xc3, 0xe4, 0x1d, 0xf0, 0x28 };
            Assert.AreEqual((3, 228), _service.OrderSetBufferAddress(data, 0));
        }
    }
}
