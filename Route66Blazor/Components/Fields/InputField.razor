@using Route66Blazor.Models
@using Services.Models
@implements IFieldComponent
@inject ILogger<InputField> Logger

<input type="text"
       class="field"
       style="left: @(FieldData.Col)ch; width: @(FieldData.Length)ch;"
       @bind="@(FieldData.Value)"
       @bind:event="oninput"
       @bind:after="OnValueChanged"
       @onfocus="OnFocus"
       @onblur="OnBlur"/>

@code {

    [Parameter]
    public FieldData FieldData { get; set; } = new FieldData { Row = 0, Col = 0, Value = "", IsProtected = false };

    [Parameter]
    public EventCallback<FieldData> FieldDataChanged { get; set; }

    [CascadingParameter(Name = "CursorAction")]
    public Action<(int, int)>? CursorAction { get; set; }

    private async Task OnValueChanged()
    {
        await FieldDataChanged.InvokeAsync(FieldData);
    }

    private void OnFocus()
    {
        CursorAction?.Invoke((FieldData.Row, FieldData.Col));
    }

    private void OnBlur()
    {
    }
}
